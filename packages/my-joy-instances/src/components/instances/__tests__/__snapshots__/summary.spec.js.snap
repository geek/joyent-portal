// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders <Summary /> without throwing 1`] = `
.c0 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.625rem;
  margin-left: -0.625rem;
}

.c5 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.625rem;
  margin-left: -0.625rem;
}

.c16 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.625rem;
  margin-left: -0.625rem;
}

.c1 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c6 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c17 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c26 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c31 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c8 {
  margin-top: 0.75rem;
  margin-bottom: 1.125rem;
}

.c14 {
  margin-top: 0.375rem;
}

.c29 {
  margin-top: 1.5rem;
  margin-bottom: 1.875rem;
}

.c4 {
  padding: 1.5rem;
}

.c22 {
  padding-top: 0.1875rem;
}

.c21 {
  background-color: transparent;
  -webkit-text-decoration-skip: objects;
  text-decoration-skip: objects;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
}

.c24 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  text-transform: none;
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  min-width: 7.5rem;
}

.c24::-moz-focus-inner,
.c24[type='button']::-moz-focus-inner,
.c24[type='reset']::-moz-focus-inner,
.c24[type='submit']::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

.c24:-moz-focusring,
.c24[type='button']:-moz-focusring,
.c24[type='reset']:-moz-focusring,
.c24[type='submit']:-moz-focusring {
  outline: 0.0625rem dotted ButtonText;
}

.c24 + button,
.c24 + a {
  margin-left: 0.375rem;
}

.c20 {
  color: rgb(59,70,204);
  -webkit-text-fill-color: currentcolor;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
}

.c20:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c35 {
  cursor: pointer;
}

.c19 {
  display: inline-block;
}

.c19 + button,
.c19 + a {
  margin-left: 0.375rem;
}

.c18 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  padding: 0.625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  min-height: 0rem;
  height: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-weight: 500;
}

.c18:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c18:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c18:active,
.c18:active:hover,
.c18:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c18[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c18:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c18:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c18:active,
.c18:active:hover,
.c18:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c18 svg + span {
  margin-left: 0.75rem;
}

.c18 svg {
  max-height: 1.125rem;
}

.c23 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  padding: 0.625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  min-height: 0rem;
  height: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c23:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c23:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c23:active,
.c23:active:hover,
.c23:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c23[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c23:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c23:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c23:active,
.c23:active:hover,
.c23:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c23:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c23:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c23:active,
.c23:active:hover,
.c23:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c23 svg + span {
  margin-left: 0.75rem;
}

.c23 svg {
  max-height: 1.125rem;
}

.c25 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-weight: 500;
}

.c25:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c25:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c25:active,
.c25:active:hover,
.c25:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c25[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c25:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c25:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c25:active,
.c25:active:hover,
.c25:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c25:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c25:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c25:active,
.c25:active:hover,
.c25:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c25 svg + span {
  margin-left: 0.75rem;
}

.c25 svg {
  max-height: 1.125rem;
}

.c27 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  color: rgb(210,67,58);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(210,67,58);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  padding: 0.625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  min-height: 0rem;
  height: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  float: right;
}

.c27:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c27:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c27:active,
.c27:active:hover,
.c27:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c27[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c27:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c27:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c27:active,
.c27:active:hover,
.c27:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c27:focus {
  color: rgb(205,37,27);
  background-color: rgb(255,255,255);
  border-color: rgb(205,37,27);
}

.c27:hover {
  color: rgb(205,37,27);
  background-color: rgb(255,255,255);
  border-color: rgb(205,37,27);
}

.c27:active,
.c27:active:hover,
.c27:active:focus {
  background-color: rgba(210,67,58,0.1);
  border-color: rgb(205,37,27);
}

.c27:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c27:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c27:active,
.c27:active:hover,
.c27:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c27 svg + span {
  margin-left: 0.75rem;
}

.c27 svg {
  max-height: 1.125rem;
}

.c28 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  color: rgb(210,67,58);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(210,67,58);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-weight: 500;
  float: right;
}

.c28:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c28:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c28:active,
.c28:active:hover,
.c28:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c28[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c28:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c28:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c28:active,
.c28:active:hover,
.c28:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c28:focus {
  color: rgb(205,37,27);
  background-color: rgb(255,255,255);
  border-color: rgb(205,37,27);
}

.c28:hover {
  color: rgb(205,37,27);
  background-color: rgb(255,255,255);
  border-color: rgb(205,37,27);
}

.c28:active,
.c28:active:hover,
.c28:active:focus {
  background-color: rgba(210,67,58,0.1);
  border-color: rgb(205,37,27);
}

.c28:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c28:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c28:active,
.c28:active:hover,
.c28:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c28 svg + span {
  margin-left: 0.75rem;
}

.c28 svg {
  max-height: 1.125rem;
}

.c13 {
  width: 0.9375rem;
  height: 0.9375rem;
  border-radius: 50%;
  display: inline-block;
  margin-right: 0.375rem;
  margin-left: 0rem;
}

.c11 {
  font-size: 0.9375rem;
  line-height: 1.125rem;
  font-style: normal;
  font-stretch: normal;
  display: block;
  color: rgb(70,70,70);
  text-align: left;
  margin-bottom: 0.1875rem;
}

.c32 {
  font-size: 0.9375rem;
  line-height: 1.125rem;
  font-style: normal;
  font-stretch: normal;
  display: block;
  color: rgb(70,70,70);
  text-align: left;
  margin-bottom: 0.1875rem;
  margin-right: 0.75rem;
  font-weight: 600;
  white-space: pre;
  font-size: 0.8125rem;
}

.c7 {
  color: rgb(73,73,73);
  font-weight: normal;
  line-height: 1.875rem;
  font-size: 1.5rem;
  margin: 0;
}

.c7 + p,
.c7 + small,
.c7 + h1,
.c7 + h2,
.c7 + label,
.c7 + h3,
.c7 + h4,
.c7 + h5,
.c7 + div,
.c7 + span {
  margin-top: 1.5rem;
}

.c30 {
  background-color: rgb(216,216,216);
  margin: 0;
  height: 0.0625rem;
}

.c2 {
  box-sizing: content-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  border-width: 0.0625rem;
  border-style: solid;
  -webkit-transition: all 300ms ease;
  transition: all 300ms ease;
  color: rgb(73,73,73);
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c3 {
  box-sizing: content-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  border-width: 0.0625rem;
  border-style: solid;
  -webkit-transition: all 300ms ease;
  transition: all 300ms ease;
  color: rgb(73,73,73);
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  box-sizing: border-box;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  border-width: 0;
  margin-bottom: 0;
  background-color: transparent;
}

.c3 > [name='card']:not(:last-child) {
  margin-bottom: 0.8125rem;
}

.c3 > [name='card']:last-child {
  margin-bottom: 0.4375rem;
}

.c34 {
  box-sizing: border-box;
  width: 18.75rem;
  height: 3rem;
  min-height: 3rem;
  padding: 0.8125rem 0.75rem;
  border-radius: 0.25rem;
  background-color: rgb(255,255,255);
  border: 0.0625rem solid rgb(216,216,216);
  color: rgb(73,73,73);
  font-size: 0.9375rem;
  line-height: normal !important;
  font-style: normal;
  font-stretch: normal;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  outline: 0;
  font-family: "Roboto Mono",monospace;
  width: 100%;
  min-width: 100%;
  text-overflow: ellipsis;
}

.c34:focus {
  border-color: rgb(59,70,204);
  outline: 0;
}

.c34::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c34::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c34:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c34:invalid {
  box-shadow: none;
}

.c34:disabled {
  background-color: rgb(250,250,250);
  color: rgb(216,216,216);
  cursor: not-allowed;
}

.c34:disabled::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c34:disabled::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c34:disabled:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c34:disabled {
  color: rgb(73,73,73);
}

.c34:disabled::-webkit-input-placeholder {
  color: rgb(73,73,73);
}

.c34:disabled::-moz-placeholder {
  color: rgb(73,73,73);
}

.c34:disabled:-ms-input-placeholder {
  color: rgb(73,73,73);
}

.c36 {
  box-sizing: border-box;
  width: 18.75rem;
  height: 3rem;
  min-height: 3rem;
  padding: 0.8125rem 0.75rem;
  border-radius: 0.25rem;
  background-color: rgb(255,255,255);
  border: 0.0625rem solid rgb(216,216,216);
  color: rgb(73,73,73);
  font-size: 0.9375rem;
  line-height: normal !important;
  font-style: normal;
  font-stretch: normal;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  outline: 0;
  font-family: "Roboto Mono",monospace;
  width: 100%;
  min-width: 100%;
}

.c36:focus {
  border-color: rgb(59,70,204);
  outline: 0;
}

.c36::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36:invalid {
  box-shadow: none;
}

.c36:disabled {
  background-color: rgb(250,250,250);
  color: rgb(216,216,216);
  cursor: not-allowed;
}

.c36:disabled::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36:disabled::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36:disabled:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36:disabled {
  color: rgb(73,73,73);
}

.c36:disabled::-webkit-input-placeholder {
  color: rgb(73,73,73);
}

.c36:disabled::-moz-placeholder {
  color: rgb(73,73,73);
}

.c36:disabled:-ms-input-placeholder {
  color: rgb(73,73,73);
}

.c33 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 0.625rem;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c33 input {
  padding-right: 1.875rem;
}

.c33 div {
  position: relative;
  left: -1.625rem;
}

.c15 {
  opacity: 0.5;
  padding-right: 0.1875rem;
}

.c10 {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.c9 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.c12 {
  width: 0.0625rem;
  background: rgb(216,216,216);
  height: 1.5rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end;
  margin: 0 0.75rem;
}

@media only screen and (min-width:0em) {
  .c5 {
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
  }
}

@media only screen and (min-width:0em) {
  .c16 {
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
  }
}

@media only screen and (min-width:0em) {
  .c1 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media only screen and (min-width:48em) {
  .c1 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media only screen and (min-width:64em) {
  .c1 {
    -webkit-flex-basis: 75%;
    -ms-flex-preferred-size: 75%;
    flex-basis: 75%;
    max-width: 75%;
  }
}

@media only screen and (min-width:0em) {
  .c6 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media only screen and (min-width:0em) {
  .c17 {
    -webkit-flex-basis: 75%;
    -ms-flex-preferred-size: 75%;
    flex-basis: 75%;
    max-width: 75%;
  }
}

@media only screen and (min-width:0em) {
  .c26 {
    -webkit-flex-basis: 25%;
    -ms-flex-preferred-size: 25%;
    flex-basis: 25%;
    max-width: 25%;
  }
}

@media only screen and (min-width:0em) {
  .c31 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media only screen and (min-width:64em) {
  .c31 {
    -webkit-flex-basis: 58.333333333333336%;
    -ms-flex-preferred-size: 58.333333333333336%;
    flex-basis: 58.333333333333336%;
    max-width: 58.333333333333336%;
  }
}

@media (max-width:47.9375rem) {
  .c9 {
    display: block;
  }
}

@media (max-width:47.9375rem) {
  .c12 {
    display: none;
  }
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <div
      className="c2"
      disabled={false}
      name="card"
    >
      <div
        className="c3"
        name="card-outlet"
      >
        <div
          className="c4"
        >
          <div
            className="c5"
          >
            <div
              className="c6"
            >
              <h2
                className="c7"
              />
            </div>
          </div>
          <div
            className="c8"
          >
            <div
              className="c9"
            >
              <label
                className="c10 c11"
              >
                Custom Image
              </label>
              <div
                className="c12"
              />
              <label
                className="c10 c11"
              >
                Hardware virtual machine
              </label>
              <div
                className="c12"
              />
              <label
                className="c10 c11"
              />
              <div
                className="c12"
              />
              <div
                className="c9"
              >
                <span
                  className="c13"
                  color={undefined}
                  size="0.9375rem"
                />
                
              </div>
            </div>
            <div
              className="c14"
            >
              <div
                className="c9"
              >
                <div
                  className="c9"
                >
                  <label
                    className="c15 c11"
                  >
                    Created: 
                  </label>
                  <label
                    className="c11"
                  >
                     
                    almost NaN years
                     ago
                  </label>
                </div>
                <div
                  className="c12"
                />
                <div
                  className="c9"
                >
                  <label
                    className="c15 c11"
                  >
                    Updated: 
                  </label>
                  <label
                    className="c11"
                  >
                     
                    almost NaN years
                     ago
                  </label>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c16"
          >
            <div
              className="c17"
            >
              <a
                className="c18 c19 c20 c21"
                data-ui-button="true"
                href="http://localhost/images/~create/undefined"
                icon={true}
                rel="noopener noreferrer"
                target="__blank"
              >
                <div
                  className="c22"
                >
                  <svg
                    className=""
                    height="20"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 16.67 20"
                    width="16.67"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M12.83,8v6h-9V8h9m0-1h-9a1,1,0,0,0-1,1v6a1,1,0,0,0,1,1h9a1,1,0,0,0,1-1V8a1,1,0,0,0-1-1Zm-7,5.5v-3a.5.5,0,0,0-.5-.5h0a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,.5.5h0A.5.5,0,0,0,5.83,12.5Zm2,0v-3a.5.5,0,0,0-.5-.5h0a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,.5.5h0A.5.5,0,0,0,7.83,12.5Zm2,0v-3a.5.5,0,0,0-.5-.5h0a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,.5.5h0A.5.5,0,0,0,9.83,12.5Zm2,0v-3a.5.5,0,0,0-.5-.5h0a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,.5.5h0A.5.5,0,0,0,11.83,12.5Zm3.73-8.06L12.22,1.11,11.11,0h-10A1.11,1.11,0,0,0,0,1.11V18.89A1.11,1.11,0,0,0,1.11,20H15.56a1.11,1.11,0,0,0,1.11-1.11V5.56ZM14.83,5h-3V2Zm-13,13V2h9V6h4V18Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </a>
              <span
                name="react-responsive-mock"
                query="only screen and (max-width: 47.9375rem)"
              >
                <button
                  className="c23 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="14"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 13.36 14"
                    width="13.36"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M2.53,1.68a.81.81,0,0,1,.39.1l8.31,4.48a.84.84,0,0,1,0,1.48L2.92,12.22a.81.81,0,0,1-.39.1.85.85,0,0,1-.85-.85V2.53a.85.85,0,0,1,.85-.85M2.53,0A2.53,2.53,0,0,0,0,2.53v8.94A2.53,2.53,0,0,0,3.72,13.7L12,9.22a2.52,2.52,0,0,0,0-4.44L3.72.3A2.5,2.5,0,0,0,2.53,0Z"
                      fill="rgb(216, 216, 216)"
                    />
                  </svg>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (min-width: 48rem)"
              >
                <button
                  className="c25 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="14"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 13.36 14"
                    width="13.36"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M2.53,1.68a.81.81,0,0,1,.39.1l8.31,4.48a.84.84,0,0,1,0,1.48L2.92,12.22a.81.81,0,0,1-.39.1.85.85,0,0,1-.85-.85V2.53a.85.85,0,0,1,.85-.85M2.53,0A2.53,2.53,0,0,0,0,2.53v8.94A2.53,2.53,0,0,0,3.72,13.7L12,9.22a2.52,2.52,0,0,0,0-4.44L3.72.3A2.5,2.5,0,0,0,2.53,0Z"
                      fill="rgb(216, 216, 216)"
                    />
                  </svg>
                  <span>
                    Start
                  </span>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (max-width: 47.9375rem)"
              >
                <button
                  className="c23 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="14"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 14 14"
                    width="14"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M10.75,1.75a1.5,1.5,0,0,1,1.5,1.5v7.5a1.5,1.5,0,0,1-1.5,1.5H3.25a1.5,1.5,0,0,1-1.5-1.5V3.25a1.5,1.5,0,0,1,1.5-1.5h7.5m0-1.75H3.25A3.26,3.26,0,0,0,0,3.25v7.5A3.26,3.26,0,0,0,3.25,14h7.5A3.26,3.26,0,0,0,14,10.75V3.25A3.26,3.26,0,0,0,10.75,0Z"
                      fill="rgb(216, 216, 216)"
                    />
                  </svg>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (min-width: 48rem)"
              >
                <button
                  className="c25 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="14"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 14 14"
                    width="14"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M10.75,1.75a1.5,1.5,0,0,1,1.5,1.5v7.5a1.5,1.5,0,0,1-1.5,1.5H3.25a1.5,1.5,0,0,1-1.5-1.5V3.25a1.5,1.5,0,0,1,1.5-1.5h7.5m0-1.75H3.25A3.26,3.26,0,0,0,0,3.25v7.5A3.26,3.26,0,0,0,3.25,14h7.5A3.26,3.26,0,0,0,14,10.75V3.25A3.26,3.26,0,0,0,10.75,0Z"
                      fill="rgb(216, 216, 216)"
                    />
                  </svg>
                  <span>
                    Stop
                  </span>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (max-width: 47.9375rem)"
              >
                <button
                  className="c23 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="21"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    version="1.1"
                    viewBox="0 0 20 21"
                    width="20"
                    xmlns="http://www.w3.org/2000/svg"
                    xmlnsXlink="http://www.w3.org/1999/xlink"
                  >
                    <g
                      transform="translate(17997 -18577)"
                    >
                      <g>
                        <use
                          fill="rgb(216, 216, 216)"
                          transform="matrix(0.866025 0.5 -0.5 0.866025 -17988.7 18577.9)"
                          xlinkHref="#f"
                        />
                      </g>
                    </g>
                    <defs>
                      <path
                        d="M 5.39661 3.57718L 5.3977 5.34469L 10.0255 2.67281L 5.39715 0L 5.39832 2.00201C 2.33086 2.5484 0.00065755 5.23112 0 8.45654C 0.000380483 12.0783 2.93556 15.0137 6.55562 15.0143C 10.1774 15.014 13.1128 12.0788 13.1124 8.45702L 11.5697 8.45687C 11.5697 11.2264 9.32527 13.4717 6.55578 13.4716C 3.78629 13.4716 1.54268 11.2262 1.5427 8.45669C 1.54135 6.08718 3.18616 4.10012 5.39661 3.57718Z"
                        fillRule="evenodd"
                        id="f"
                      />
                    </defs>
                  </svg>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (min-width: 48rem)"
              >
                <button
                  className="c25 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="21"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    version="1.1"
                    viewBox="0 0 20 21"
                    width="20"
                    xmlns="http://www.w3.org/2000/svg"
                    xmlnsXlink="http://www.w3.org/1999/xlink"
                  >
                    <g
                      transform="translate(17997 -18577)"
                    >
                      <g>
                        <use
                          fill="rgb(216, 216, 216)"
                          transform="matrix(0.866025 0.5 -0.5 0.866025 -17988.7 18577.9)"
                          xlinkHref="#f"
                        />
                      </g>
                    </g>
                    <defs>
                      <path
                        d="M 5.39661 3.57718L 5.3977 5.34469L 10.0255 2.67281L 5.39715 0L 5.39832 2.00201C 2.33086 2.5484 0.00065755 5.23112 0 8.45654C 0.000380483 12.0783 2.93556 15.0137 6.55562 15.0143C 10.1774 15.014 13.1128 12.0788 13.1124 8.45702L 11.5697 8.45687C 11.5697 11.2264 9.32527 13.4717 6.55578 13.4716C 3.78629 13.4716 1.54268 11.2262 1.5427 8.45669C 1.54135 6.08718 3.18616 4.10012 5.39661 3.57718Z"
                        fillRule="evenodd"
                        id="f"
                      />
                    </defs>
                  </svg>
                  <span>
                    Reboot
                  </span>
                </button>
              </span>
            </div>
            <div
              className="c26"
            >
              <span
                name="react-responsive-mock"
                query="only screen and (max-width: 47.9375rem)"
              >
                <button
                  className="c27 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="16"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 12 16"
                    width="12"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M2.67,0V1.5H0V3H12V1.5H9.33V0ZM0,4,1.33,16h9.34L12,4ZM8,5h2.51l-1,10H8ZM1.49,5H4V15H2.53ZM7,15H5V5H7Z"
                      fill="rgb(210, 67, 58)"
                    />
                  </svg>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (min-width: 48rem)"
              >
                <button
                  className="c28 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="16"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 12 16"
                    width="12"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M2.67,0V1.5H0V3H12V1.5H9.33V0ZM0,4,1.33,16h9.34L12,4ZM8,5h2.51l-1,10H8ZM1.49,5H4V15H2.53ZM7,15H5V5H7Z"
                      fill="rgb(216, 216, 216)"
                    />
                  </svg>
                  <span>
                    Remove
                  </span>
                </button>
              </span>
            </div>
          </div>
          <div
            className="c29"
          >
            <div
              className="c30 c0"
              height="0.0625rem"
            />
          </div>
          <div
            className="c0"
          >
            <div
              className="c31"
            >
              <label
                className="c32"
                htmlFor=""
              >
                Short ID
              </label>
              <div
                className="c33"
              >
                <input
                  className="c34"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value=""
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c35"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c0"
          >
            <div
              className="c31"
            >
              <label
                className="c32"
                htmlFor=""
              >
                ID
              </label>
              <div
                className="c33"
              >
                <input
                  className="c34"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value={undefined}
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c35"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c0"
          >
            <div
              className="c31"
            >
              <label
                className="c32"
                htmlFor=""
              >
                CN UUID
              </label>
              <div
                className="c33"
              >
                <input
                  className="c34"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value={undefined}
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c35"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c0"
          >
            <div
              className="c31"
            >
              <label
                className="c32"
                htmlFor=""
              >
                Login
              </label>
              <div
                className="c33"
              >
                <input
                  className="c36"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value="ssh root@undefined"
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c35"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`renders <Summary instance /> without throwing 1`] = `
.c0 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.625rem;
  margin-left: -0.625rem;
}

.c5 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.625rem;
  margin-left: -0.625rem;
}

.c16 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.625rem;
  margin-left: -0.625rem;
}

.c1 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c6 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c17 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c28 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c33 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c8 {
  margin-top: 0.75rem;
  margin-bottom: 1.125rem;
}

.c14 {
  margin-top: 0.375rem;
}

.c31 {
  margin-top: 1.5rem;
  margin-bottom: 1.875rem;
}

.c4 {
  padding: 1.5rem;
}

.c22 {
  padding-top: 0.1875rem;
}

.c21 {
  background-color: transparent;
  -webkit-text-decoration-skip: objects;
  text-decoration-skip: objects;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
}

.c24 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  text-transform: none;
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  min-width: 7.5rem;
}

.c24::-moz-focus-inner,
.c24[type='button']::-moz-focus-inner,
.c24[type='reset']::-moz-focus-inner,
.c24[type='submit']::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

.c24:-moz-focusring,
.c24[type='button']:-moz-focusring,
.c24[type='reset']:-moz-focusring,
.c24[type='submit']:-moz-focusring {
  outline: 0.0625rem dotted ButtonText;
}

.c24 + button,
.c24 + a {
  margin-left: 0.375rem;
}

.c20 {
  color: rgb(59,70,204);
  -webkit-text-fill-color: currentcolor;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
}

.c20:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c37 {
  cursor: pointer;
}

.c19 {
  display: inline-block;
}

.c19 + button,
.c19 + a {
  margin-left: 0.375rem;
}

.c18 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  padding: 0.625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  min-height: 0rem;
  height: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-weight: 500;
}

.c18:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c18:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c18:active,
.c18:active:hover,
.c18:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c18[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c18:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c18:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c18:active,
.c18:active:hover,
.c18:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c18 svg + span {
  margin-left: 0.75rem;
}

.c18 svg {
  max-height: 1.125rem;
}

.c23 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  padding: 0.625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  min-height: 0rem;
  height: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c23:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c23:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c23:active,
.c23:active:hover,
.c23:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c23[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c23:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c23:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c23:active,
.c23:active:hover,
.c23:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c23:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c23:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c23:active,
.c23:active:hover,
.c23:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c23 svg + span {
  margin-left: 0.75rem;
}

.c23 svg {
  max-height: 1.125rem;
}

.c25 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-weight: 500;
}

.c25:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c25:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c25:active,
.c25:active:hover,
.c25:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c25[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c25:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c25:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c25:active,
.c25:active:hover,
.c25:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c25:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c25:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c25:active,
.c25:active:hover,
.c25:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c25 svg + span {
  margin-left: 0.75rem;
}

.c25 svg {
  max-height: 1.125rem;
}

.c26 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  padding: 0.625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  min-height: 0rem;
  height: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c26:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c26:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c26:active,
.c26:active:hover,
.c26:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c26[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c26:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c26:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c26:active,
.c26:active:hover,
.c26:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c26 svg + span {
  margin-left: 0.75rem;
}

.c26 svg {
  max-height: 1.125rem;
}

.c27 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-weight: 500;
}

.c27:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c27:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c27:active,
.c27:active:hover,
.c27:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c27[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c27:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c27:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c27:active,
.c27:active:hover,
.c27:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c27 svg + span {
  margin-left: 0.75rem;
}

.c27 svg {
  max-height: 1.125rem;
}

.c29 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  color: rgb(210,67,58);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(210,67,58);
  padding: 0.625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  min-height: 0rem;
  height: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  float: right;
}

.c29:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c29:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c29:active,
.c29:active:hover,
.c29:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c29[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c29:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c29:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c29:active,
.c29:active:hover,
.c29:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c29:focus {
  color: rgb(205,37,27);
  background-color: rgb(255,255,255);
  border-color: rgb(205,37,27);
}

.c29:hover {
  color: rgb(205,37,27);
  background-color: rgb(255,255,255);
  border-color: rgb(205,37,27);
}

.c29:active,
.c29:active:hover,
.c29:active:focus {
  background-color: rgba(210,67,58,0.1);
  border-color: rgb(205,37,27);
}

.c29 svg + span {
  margin-left: 0.75rem;
}

.c29 svg {
  max-height: 1.125rem;
}

.c30 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  color: rgb(210,67,58);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(210,67,58);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-weight: 500;
  float: right;
}

.c30:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c30:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c30:active,
.c30:active:hover,
.c30:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c30[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c30:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c30:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c30:active,
.c30:active:hover,
.c30:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c30:focus {
  color: rgb(205,37,27);
  background-color: rgb(255,255,255);
  border-color: rgb(205,37,27);
}

.c30:hover {
  color: rgb(205,37,27);
  background-color: rgb(255,255,255);
  border-color: rgb(205,37,27);
}

.c30:active,
.c30:active:hover,
.c30:active:focus {
  background-color: rgba(210,67,58,0.1);
  border-color: rgb(205,37,27);
}

.c30 svg + span {
  margin-left: 0.75rem;
}

.c30 svg {
  max-height: 1.125rem;
}

.c13 {
  width: 0.9375rem;
  height: 0.9375rem;
  border-radius: 50%;
  background-color: rgb(0,152,88);
  display: inline-block;
  margin-right: 0.375rem;
  margin-left: 0rem;
}

.c11 {
  font-size: 0.9375rem;
  line-height: 1.125rem;
  font-style: normal;
  font-stretch: normal;
  display: block;
  color: rgb(70,70,70);
  text-align: left;
  margin-bottom: 0.1875rem;
}

.c34 {
  font-size: 0.9375rem;
  line-height: 1.125rem;
  font-style: normal;
  font-stretch: normal;
  display: block;
  color: rgb(70,70,70);
  text-align: left;
  margin-bottom: 0.1875rem;
  margin-right: 0.75rem;
  font-weight: 600;
  white-space: pre;
  font-size: 0.8125rem;
}

.c7 {
  color: rgb(73,73,73);
  font-weight: normal;
  line-height: 1.875rem;
  font-size: 1.5rem;
  margin: 0;
}

.c7 + p,
.c7 + small,
.c7 + h1,
.c7 + h2,
.c7 + label,
.c7 + h3,
.c7 + h4,
.c7 + h5,
.c7 + div,
.c7 + span {
  margin-top: 1.5rem;
}

.c32 {
  background-color: rgb(216,216,216);
  margin: 0;
  height: 0.0625rem;
}

.c2 {
  box-sizing: content-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  border-width: 0.0625rem;
  border-style: solid;
  -webkit-transition: all 300ms ease;
  transition: all 300ms ease;
  color: rgb(73,73,73);
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c3 {
  box-sizing: content-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  border-width: 0.0625rem;
  border-style: solid;
  -webkit-transition: all 300ms ease;
  transition: all 300ms ease;
  color: rgb(73,73,73);
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  box-sizing: border-box;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  border-width: 0;
  margin-bottom: 0;
  background-color: transparent;
}

.c3 > [name='card']:not(:last-child) {
  margin-bottom: 0.8125rem;
}

.c3 > [name='card']:last-child {
  margin-bottom: 0.4375rem;
}

.c36 {
  box-sizing: border-box;
  width: 18.75rem;
  height: 3rem;
  min-height: 3rem;
  padding: 0.8125rem 0.75rem;
  border-radius: 0.25rem;
  background-color: rgb(255,255,255);
  border: 0.0625rem solid rgb(216,216,216);
  color: rgb(73,73,73);
  font-size: 0.9375rem;
  line-height: normal !important;
  font-style: normal;
  font-stretch: normal;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  outline: 0;
  font-family: "Roboto Mono",monospace;
  width: 100%;
  min-width: 100%;
}

.c36:focus {
  border-color: rgb(59,70,204);
  outline: 0;
}

.c36::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36:invalid {
  box-shadow: none;
}

.c36:disabled {
  background-color: rgb(250,250,250);
  color: rgb(216,216,216);
  cursor: not-allowed;
}

.c36:disabled::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36:disabled::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36:disabled:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36:disabled {
  color: rgb(73,73,73);
}

.c36:disabled::-webkit-input-placeholder {
  color: rgb(73,73,73);
}

.c36:disabled::-moz-placeholder {
  color: rgb(73,73,73);
}

.c36:disabled:-ms-input-placeholder {
  color: rgb(73,73,73);
}

.c35 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 0.625rem;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c35 input {
  padding-right: 1.875rem;
}

.c35 div {
  position: relative;
  left: -1.625rem;
}

.c38 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 0.625rem;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin-bottom: 0rem;
}

.c38 input {
  padding-right: 1.875rem;
}

.c38 div {
  position: relative;
  left: -1.625rem;
}

.c15 {
  opacity: 0.5;
  padding-right: 0.1875rem;
}

.c10 {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.c9 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.c12 {
  width: 0.0625rem;
  background: rgb(216,216,216);
  height: 1.5rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end;
  margin: 0 0.75rem;
}

@media only screen and (min-width:0em) {
  .c5 {
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
  }
}

@media only screen and (min-width:0em) {
  .c16 {
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
  }
}

@media only screen and (min-width:0em) {
  .c1 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media only screen and (min-width:48em) {
  .c1 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media only screen and (min-width:64em) {
  .c1 {
    -webkit-flex-basis: 75%;
    -ms-flex-preferred-size: 75%;
    flex-basis: 75%;
    max-width: 75%;
  }
}

@media only screen and (min-width:0em) {
  .c6 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media only screen and (min-width:0em) {
  .c17 {
    -webkit-flex-basis: 75%;
    -ms-flex-preferred-size: 75%;
    flex-basis: 75%;
    max-width: 75%;
  }
}

@media only screen and (min-width:0em) {
  .c28 {
    -webkit-flex-basis: 25%;
    -ms-flex-preferred-size: 25%;
    flex-basis: 25%;
    max-width: 25%;
  }
}

@media only screen and (min-width:0em) {
  .c33 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media only screen and (min-width:64em) {
  .c33 {
    -webkit-flex-basis: 58.333333333333336%;
    -ms-flex-preferred-size: 58.333333333333336%;
    flex-basis: 58.333333333333336%;
    max-width: 58.333333333333336%;
  }
}

@media (max-width:47.9375rem) {
  .c9 {
    display: block;
  }
}

@media (max-width:47.9375rem) {
  .c12 {
    display: none;
  }
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <div
      className="c2"
      disabled={false}
      name="card"
    >
      <div
        className="c3"
        name="card-outlet"
      >
        <div
          className="c4"
        >
          <div
            className="c5"
          >
            <div
              className="c6"
            >
              <h2
                className="c7"
              />
            </div>
          </div>
          <div
            className="c8"
          >
            <div
              className="c9"
            >
              <label
                className="c10 c11"
              >
                Alpine 3
              </label>
              <div
                className="c12"
              />
              <label
                className="c10 c11"
              >
                Hardware virtual machine
              </label>
              <div
                className="c12"
              />
              <label
                className="c10 c11"
              >
                g4-highcpu-128M
              </label>
              <div
                className="c12"
              />
              <div
                className="c9"
              >
                <span
                  className="c13"
                  color="green"
                  size="0.9375rem"
                />
                Running
              </div>
            </div>
            <div
              className="c14"
            >
              <div
                className="c9"
              >
                <div
                  className="c9"
                >
                  <label
                    className="c15 c11"
                  >
                    Created: 
                  </label>
                  <label
                    className="c11"
                  >
                     
                    almost NaN years
                     ago
                  </label>
                </div>
                <div
                  className="c12"
                />
                <div
                  className="c9"
                >
                  <label
                    className="c15 c11"
                  >
                    Updated: 
                  </label>
                  <label
                    className="c11"
                  >
                     
                    almost NaN years
                     ago
                  </label>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c16"
          >
            <div
              className="c17"
            >
              <a
                className="c18 c19 c20 c21"
                data-ui-button="true"
                href="http://localhost/images/~create/2252839a-e698-ceec-afac-9549ad0c6624"
                icon={true}
                rel="noopener noreferrer"
                target="__blank"
              >
                <div
                  className="c22"
                >
                  <svg
                    className=""
                    height="20"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 16.67 20"
                    width="16.67"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M12.83,8v6h-9V8h9m0-1h-9a1,1,0,0,0-1,1v6a1,1,0,0,0,1,1h9a1,1,0,0,0,1-1V8a1,1,0,0,0-1-1Zm-7,5.5v-3a.5.5,0,0,0-.5-.5h0a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,.5.5h0A.5.5,0,0,0,5.83,12.5Zm2,0v-3a.5.5,0,0,0-.5-.5h0a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,.5.5h0A.5.5,0,0,0,7.83,12.5Zm2,0v-3a.5.5,0,0,0-.5-.5h0a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,.5.5h0A.5.5,0,0,0,9.83,12.5Zm2,0v-3a.5.5,0,0,0-.5-.5h0a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,.5.5h0A.5.5,0,0,0,11.83,12.5Zm3.73-8.06L12.22,1.11,11.11,0h-10A1.11,1.11,0,0,0,0,1.11V18.89A1.11,1.11,0,0,0,1.11,20H15.56a1.11,1.11,0,0,0,1.11-1.11V5.56ZM14.83,5h-3V2Zm-13,13V2h9V6h4V18Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </a>
              <span
                name="react-responsive-mock"
                query="only screen and (max-width: 47.9375rem)"
              >
                <button
                  className="c23 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="14"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 13.36 14"
                    width="13.36"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M2.53,1.68a.81.81,0,0,1,.39.1l8.31,4.48a.84.84,0,0,1,0,1.48L2.92,12.22a.81.81,0,0,1-.39.1.85.85,0,0,1-.85-.85V2.53a.85.85,0,0,1,.85-.85M2.53,0A2.53,2.53,0,0,0,0,2.53v8.94A2.53,2.53,0,0,0,3.72,13.7L12,9.22a2.52,2.52,0,0,0,0-4.44L3.72.3A2.5,2.5,0,0,0,2.53,0Z"
                      fill="rgb(216, 216, 216)"
                    />
                  </svg>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (min-width: 48rem)"
              >
                <button
                  className="c25 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="14"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 13.36 14"
                    width="13.36"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M2.53,1.68a.81.81,0,0,1,.39.1l8.31,4.48a.84.84,0,0,1,0,1.48L2.92,12.22a.81.81,0,0,1-.39.1.85.85,0,0,1-.85-.85V2.53a.85.85,0,0,1,.85-.85M2.53,0A2.53,2.53,0,0,0,0,2.53v8.94A2.53,2.53,0,0,0,3.72,13.7L12,9.22a2.52,2.52,0,0,0,0-4.44L3.72.3A2.5,2.5,0,0,0,2.53,0Z"
                      fill="rgb(216, 216, 216)"
                    />
                  </svg>
                  <span>
                    Start
                  </span>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (max-width: 47.9375rem)"
              >
                <button
                  className="c26 c19 c24"
                  data-ui-button="true"
                  disabled={false}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="14"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 14 14"
                    width="14"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M10.75,1.75a1.5,1.5,0,0,1,1.5,1.5v7.5a1.5,1.5,0,0,1-1.5,1.5H3.25a1.5,1.5,0,0,1-1.5-1.5V3.25a1.5,1.5,0,0,1,1.5-1.5h7.5m0-1.75H3.25A3.26,3.26,0,0,0,0,3.25v7.5A3.26,3.26,0,0,0,3.25,14h7.5A3.26,3.26,0,0,0,14,10.75V3.25A3.26,3.26,0,0,0,10.75,0Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (min-width: 48rem)"
              >
                <button
                  className="c27 c19 c24"
                  data-ui-button="true"
                  disabled={false}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="14"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 14 14"
                    width="14"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M10.75,1.75a1.5,1.5,0,0,1,1.5,1.5v7.5a1.5,1.5,0,0,1-1.5,1.5H3.25a1.5,1.5,0,0,1-1.5-1.5V3.25a1.5,1.5,0,0,1,1.5-1.5h7.5m0-1.75H3.25A3.26,3.26,0,0,0,0,3.25v7.5A3.26,3.26,0,0,0,3.25,14h7.5A3.26,3.26,0,0,0,14,10.75V3.25A3.26,3.26,0,0,0,10.75,0Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                  <span>
                    Stop
                  </span>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (max-width: 47.9375rem)"
              >
                <button
                  className="c26 c19 c24"
                  data-ui-button="true"
                  disabled={false}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="21"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    version="1.1"
                    viewBox="0 0 20 21"
                    width="20"
                    xmlns="http://www.w3.org/2000/svg"
                    xmlnsXlink="http://www.w3.org/1999/xlink"
                  >
                    <g
                      transform="translate(17997 -18577)"
                    >
                      <g>
                        <use
                          fill="rgb(73, 73, 73)"
                          transform="matrix(0.866025 0.5 -0.5 0.866025 -17988.7 18577.9)"
                          xlinkHref="#f"
                        />
                      </g>
                    </g>
                    <defs>
                      <path
                        d="M 5.39661 3.57718L 5.3977 5.34469L 10.0255 2.67281L 5.39715 0L 5.39832 2.00201C 2.33086 2.5484 0.00065755 5.23112 0 8.45654C 0.000380483 12.0783 2.93556 15.0137 6.55562 15.0143C 10.1774 15.014 13.1128 12.0788 13.1124 8.45702L 11.5697 8.45687C 11.5697 11.2264 9.32527 13.4717 6.55578 13.4716C 3.78629 13.4716 1.54268 11.2262 1.5427 8.45669C 1.54135 6.08718 3.18616 4.10012 5.39661 3.57718Z"
                        fillRule="evenodd"
                        id="f"
                      />
                    </defs>
                  </svg>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (min-width: 48rem)"
              >
                <button
                  className="c27 c19 c24"
                  data-ui-button="true"
                  disabled={false}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="21"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    version="1.1"
                    viewBox="0 0 20 21"
                    width="20"
                    xmlns="http://www.w3.org/2000/svg"
                    xmlnsXlink="http://www.w3.org/1999/xlink"
                  >
                    <g
                      transform="translate(17997 -18577)"
                    >
                      <g>
                        <use
                          fill="rgb(73, 73, 73)"
                          transform="matrix(0.866025 0.5 -0.5 0.866025 -17988.7 18577.9)"
                          xlinkHref="#f"
                        />
                      </g>
                    </g>
                    <defs>
                      <path
                        d="M 5.39661 3.57718L 5.3977 5.34469L 10.0255 2.67281L 5.39715 0L 5.39832 2.00201C 2.33086 2.5484 0.00065755 5.23112 0 8.45654C 0.000380483 12.0783 2.93556 15.0137 6.55562 15.0143C 10.1774 15.014 13.1128 12.0788 13.1124 8.45702L 11.5697 8.45687C 11.5697 11.2264 9.32527 13.4717 6.55578 13.4716C 3.78629 13.4716 1.54268 11.2262 1.5427 8.45669C 1.54135 6.08718 3.18616 4.10012 5.39661 3.57718Z"
                        fillRule="evenodd"
                        id="f"
                      />
                    </defs>
                  </svg>
                  <span>
                    Reboot
                  </span>
                </button>
              </span>
            </div>
            <div
              className="c28"
            >
              <span
                name="react-responsive-mock"
                query="only screen and (max-width: 47.9375rem)"
              >
                <button
                  className="c29 c19 c24"
                  data-ui-button="true"
                  disabled={false}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="16"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 12 16"
                    width="12"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M2.67,0V1.5H0V3H12V1.5H9.33V0ZM0,4,1.33,16h9.34L12,4ZM8,5h2.51l-1,10H8ZM1.49,5H4V15H2.53ZM7,15H5V5H7Z"
                      fill="rgb(210, 67, 58)"
                    />
                  </svg>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (min-width: 48rem)"
              >
                <button
                  className="c30 c19 c24"
                  data-ui-button="true"
                  disabled={false}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="16"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 12 16"
                    width="12"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M2.67,0V1.5H0V3H12V1.5H9.33V0ZM0,4,1.33,16h9.34L12,4ZM8,5h2.51l-1,10H8ZM1.49,5H4V15H2.53ZM7,15H5V5H7Z"
                      fill="rgb(210, 67, 58)"
                    />
                  </svg>
                  <span>
                    Remove
                  </span>
                </button>
              </span>
            </div>
          </div>
          <div
            className="c31"
          >
            <div
              className="c32 c0"
              height="0.0625rem"
            />
          </div>
          <div
            className="c0"
          >
            <div
              className="c33"
            >
              <label
                className="c34"
                htmlFor=""
              >
                Short ID
              </label>
              <div
                className="c35"
              >
                <input
                  className="c36"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value="2252839a"
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c37"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c0"
          >
            <div
              className="c33"
            >
              <label
                className="c34"
                htmlFor=""
              >
                ID
              </label>
              <div
                className="c35"
              >
                <input
                  className="c36"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value="2252839a-e698-ceec-afac-9549ad0c6624"
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c37"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c0"
          >
            <div
              className="c33"
            >
              <label
                className="c34"
                htmlFor=""
              >
                CN UUID
              </label>
              <div
                className="c35"
              >
                <input
                  className="c36"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value="70bb1cee-dba3-11e3-a799-002590e4f2b0"
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c37"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c0"
          >
            <div
              className="c33"
            >
              <label
                className="c34"
                htmlFor=""
              >
                Image UUID
              </label>
              <div
                className="c35"
              >
                <input
                  className="c36"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value="19aa3328-0025-11e7-a19a-c39077bfd4cf"
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c37"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c0"
          >
            <div
              className="c33"
            >
              <label
                className="c34"
                htmlFor=""
              >
                Login
              </label>
              <div
                className="c35"
              >
                <input
                  className="c36"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value="ssh root@72.2.119.146"
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c37"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c0"
          >
            <div
              className="c33"
            >
              <label
                className="c34"
                htmlFor=""
              >
                Public IP address 1
              </label>
              <div
                className="c35"
              >
                <input
                  className="c36"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value="72.2.119.146"
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c37"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c0"
          >
            <div
              className="c33"
            >
              <label
                className="c34"
                htmlFor=""
              >
                Public IP address 2
              </label>
              <div
                className="c35"
              >
                <input
                  className="c36"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value="72.2.119.146"
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c37"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c0"
          >
            <div
              className="c33"
            >
              <label
                className="c34"
                htmlFor=""
              >
                Private IP address 1
              </label>
              <div
                className="c35"
              >
                <input
                  className="c36"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value="10.112.5.63"
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c37"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c0"
          >
            <div
              className="c33"
            >
              <label
                className="c34"
                htmlFor=""
              >
                Private IP address 2
              </label>
              <div
                className="c38"
              >
                <input
                  className="c36"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value="10.112.5.63"
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c37"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`renders <Summary instance /> without throwing 2`] = `
.c0 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.625rem;
  margin-left: -0.625rem;
}

.c5 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.625rem;
  margin-left: -0.625rem;
}

.c16 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.625rem;
  margin-left: -0.625rem;
}

.c1 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c6 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c17 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c28 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c33 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c8 {
  margin-top: 0.75rem;
  margin-bottom: 1.125rem;
}

.c14 {
  margin-top: 0.375rem;
}

.c31 {
  margin-top: 1.5rem;
  margin-bottom: 1.875rem;
}

.c4 {
  padding: 1.5rem;
}

.c22 {
  padding-top: 0.1875rem;
}

.c21 {
  background-color: transparent;
  -webkit-text-decoration-skip: objects;
  text-decoration-skip: objects;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
}

.c24 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  text-transform: none;
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  min-width: 7.5rem;
}

.c24::-moz-focus-inner,
.c24[type='button']::-moz-focus-inner,
.c24[type='reset']::-moz-focus-inner,
.c24[type='submit']::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

.c24:-moz-focusring,
.c24[type='button']:-moz-focusring,
.c24[type='reset']:-moz-focusring,
.c24[type='submit']:-moz-focusring {
  outline: 0.0625rem dotted ButtonText;
}

.c24 + button,
.c24 + a {
  margin-left: 0.375rem;
}

.c20 {
  color: rgb(59,70,204);
  -webkit-text-fill-color: currentcolor;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
}

.c20:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c37 {
  cursor: pointer;
}

.c19 {
  display: inline-block;
}

.c19 + button,
.c19 + a {
  margin-left: 0.375rem;
}

.c18 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  padding: 0.625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  min-height: 0rem;
  height: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-weight: 500;
}

.c18:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c18:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c18:active,
.c18:active:hover,
.c18:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c18[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c18:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c18:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c18:active,
.c18:active:hover,
.c18:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c18 svg + span {
  margin-left: 0.75rem;
}

.c18 svg {
  max-height: 1.125rem;
}

.c23 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  padding: 0.625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  min-height: 0rem;
  height: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c23:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c23:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c23:active,
.c23:active:hover,
.c23:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c23[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c23:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c23:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c23:active,
.c23:active:hover,
.c23:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c23:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c23:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c23:active,
.c23:active:hover,
.c23:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c23 svg + span {
  margin-left: 0.75rem;
}

.c23 svg {
  max-height: 1.125rem;
}

.c25 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-weight: 500;
}

.c25:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c25:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c25:active,
.c25:active:hover,
.c25:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c25[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c25:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c25:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c25:active,
.c25:active:hover,
.c25:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c25:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c25:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c25:active,
.c25:active:hover,
.c25:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c25 svg + span {
  margin-left: 0.75rem;
}

.c25 svg {
  max-height: 1.125rem;
}

.c26 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  padding: 0.625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  min-height: 0rem;
  height: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c26:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c26:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c26:active,
.c26:active:hover,
.c26:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c26[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c26:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c26:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c26:active,
.c26:active:hover,
.c26:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c26 svg + span {
  margin-left: 0.75rem;
}

.c26 svg {
  max-height: 1.125rem;
}

.c27 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-weight: 500;
}

.c27:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c27:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c27:active,
.c27:active:hover,
.c27:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c27[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c27:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c27:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c27:active,
.c27:active:hover,
.c27:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c27 svg + span {
  margin-left: 0.75rem;
}

.c27 svg {
  max-height: 1.125rem;
}

.c29 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  color: rgb(210,67,58);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(210,67,58);
  padding: 0.625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  min-height: 0rem;
  height: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  float: right;
}

.c29:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c29:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c29:active,
.c29:active:hover,
.c29:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c29[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c29:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c29:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c29:active,
.c29:active:hover,
.c29:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c29:focus {
  color: rgb(205,37,27);
  background-color: rgb(255,255,255);
  border-color: rgb(205,37,27);
}

.c29:hover {
  color: rgb(205,37,27);
  background-color: rgb(255,255,255);
  border-color: rgb(205,37,27);
}

.c29:active,
.c29:active:hover,
.c29:active:focus {
  background-color: rgba(210,67,58,0.1);
  border-color: rgb(205,37,27);
}

.c29 svg + span {
  margin-left: 0.75rem;
}

.c29 svg {
  max-height: 1.125rem;
}

.c30 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  color: rgb(210,67,58);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(210,67,58);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-weight: 500;
  float: right;
}

.c30:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c30:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c30:active,
.c30:active:hover,
.c30:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c30[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c30:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c30:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c30:active,
.c30:active:hover,
.c30:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c30:focus {
  color: rgb(205,37,27);
  background-color: rgb(255,255,255);
  border-color: rgb(205,37,27);
}

.c30:hover {
  color: rgb(205,37,27);
  background-color: rgb(255,255,255);
  border-color: rgb(205,37,27);
}

.c30:active,
.c30:active:hover,
.c30:active:focus {
  background-color: rgba(210,67,58,0.1);
  border-color: rgb(205,37,27);
}

.c30 svg + span {
  margin-left: 0.75rem;
}

.c30 svg {
  max-height: 1.125rem;
}

.c13 {
  width: 0.9375rem;
  height: 0.9375rem;
  border-radius: 50%;
  background-color: rgb(0,152,88);
  display: inline-block;
  margin-right: 0.375rem;
  margin-left: 0rem;
}

.c11 {
  font-size: 0.9375rem;
  line-height: 1.125rem;
  font-style: normal;
  font-stretch: normal;
  display: block;
  color: rgb(70,70,70);
  text-align: left;
  margin-bottom: 0.1875rem;
}

.c34 {
  font-size: 0.9375rem;
  line-height: 1.125rem;
  font-style: normal;
  font-stretch: normal;
  display: block;
  color: rgb(70,70,70);
  text-align: left;
  margin-bottom: 0.1875rem;
  margin-right: 0.75rem;
  font-weight: 600;
  white-space: pre;
  font-size: 0.8125rem;
}

.c7 {
  color: rgb(73,73,73);
  font-weight: normal;
  line-height: 1.875rem;
  font-size: 1.5rem;
  margin: 0;
}

.c7 + p,
.c7 + small,
.c7 + h1,
.c7 + h2,
.c7 + label,
.c7 + h3,
.c7 + h4,
.c7 + h5,
.c7 + div,
.c7 + span {
  margin-top: 1.5rem;
}

.c32 {
  background-color: rgb(216,216,216);
  margin: 0;
  height: 0.0625rem;
}

.c2 {
  box-sizing: content-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  border-width: 0.0625rem;
  border-style: solid;
  -webkit-transition: all 300ms ease;
  transition: all 300ms ease;
  color: rgb(73,73,73);
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c3 {
  box-sizing: content-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  border-width: 0.0625rem;
  border-style: solid;
  -webkit-transition: all 300ms ease;
  transition: all 300ms ease;
  color: rgb(73,73,73);
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  box-sizing: border-box;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  border-width: 0;
  margin-bottom: 0;
  background-color: transparent;
}

.c3 > [name='card']:not(:last-child) {
  margin-bottom: 0.8125rem;
}

.c3 > [name='card']:last-child {
  margin-bottom: 0.4375rem;
}

.c36 {
  box-sizing: border-box;
  width: 18.75rem;
  height: 3rem;
  min-height: 3rem;
  padding: 0.8125rem 0.75rem;
  border-radius: 0.25rem;
  background-color: rgb(255,255,255);
  border: 0.0625rem solid rgb(216,216,216);
  color: rgb(73,73,73);
  font-size: 0.9375rem;
  line-height: normal !important;
  font-style: normal;
  font-stretch: normal;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  outline: 0;
  font-family: "Roboto Mono",monospace;
  width: 100%;
  min-width: 100%;
}

.c36:focus {
  border-color: rgb(59,70,204);
  outline: 0;
}

.c36::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36:invalid {
  box-shadow: none;
}

.c36:disabled {
  background-color: rgb(250,250,250);
  color: rgb(216,216,216);
  cursor: not-allowed;
}

.c36:disabled::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36:disabled::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36:disabled:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36:disabled {
  color: rgb(73,73,73);
}

.c36:disabled::-webkit-input-placeholder {
  color: rgb(73,73,73);
}

.c36:disabled::-moz-placeholder {
  color: rgb(73,73,73);
}

.c36:disabled:-ms-input-placeholder {
  color: rgb(73,73,73);
}

.c35 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 0.625rem;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c35 input {
  padding-right: 1.875rem;
}

.c35 div {
  position: relative;
  left: -1.625rem;
}

.c38 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 0.625rem;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin-bottom: 0rem;
}

.c38 input {
  padding-right: 1.875rem;
}

.c38 div {
  position: relative;
  left: -1.625rem;
}

.c15 {
  opacity: 0.5;
  padding-right: 0.1875rem;
}

.c10 {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.c9 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.c12 {
  width: 0.0625rem;
  background: rgb(216,216,216);
  height: 1.5rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end;
  margin: 0 0.75rem;
}

@media only screen and (min-width:0em) {
  .c5 {
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
  }
}

@media only screen and (min-width:0em) {
  .c16 {
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
  }
}

@media only screen and (min-width:0em) {
  .c1 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media only screen and (min-width:48em) {
  .c1 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media only screen and (min-width:64em) {
  .c1 {
    -webkit-flex-basis: 75%;
    -ms-flex-preferred-size: 75%;
    flex-basis: 75%;
    max-width: 75%;
  }
}

@media only screen and (min-width:0em) {
  .c6 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media only screen and (min-width:0em) {
  .c17 {
    -webkit-flex-basis: 75%;
    -ms-flex-preferred-size: 75%;
    flex-basis: 75%;
    max-width: 75%;
  }
}

@media only screen and (min-width:0em) {
  .c28 {
    -webkit-flex-basis: 25%;
    -ms-flex-preferred-size: 25%;
    flex-basis: 25%;
    max-width: 25%;
  }
}

@media only screen and (min-width:0em) {
  .c33 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media only screen and (min-width:64em) {
  .c33 {
    -webkit-flex-basis: 58.333333333333336%;
    -ms-flex-preferred-size: 58.333333333333336%;
    flex-basis: 58.333333333333336%;
    max-width: 58.333333333333336%;
  }
}

@media (max-width:47.9375rem) {
  .c9 {
    display: block;
  }
}

@media (max-width:47.9375rem) {
  .c12 {
    display: none;
  }
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <div
      className="c2"
      disabled={false}
      name="card"
    >
      <div
        className="c3"
        name="card-outlet"
      >
        <div
          className="c4"
        >
          <div
            className="c5"
          >
            <div
              className="c6"
            >
              <h2
                className="c7"
              />
            </div>
          </div>
          <div
            className="c8"
          >
            <div
              className="c9"
            >
              <label
                className="c10 c11"
              >
                Custom Image
              </label>
              <div
                className="c12"
              />
              <label
                className="c10 c11"
              >
                Infrastructure container
              </label>
              <div
                className="c12"
              />
              <label
                className="c10 c11"
              >
                g4-highcpu-128M
              </label>
              <div
                className="c12"
              />
              <div
                className="c9"
              >
                <span
                  className="c13"
                  color="green"
                  size="0.9375rem"
                />
                Running
              </div>
            </div>
            <div
              className="c14"
            >
              <div
                className="c9"
              >
                <div
                  className="c9"
                >
                  <label
                    className="c15 c11"
                  >
                    Created: 
                  </label>
                  <label
                    className="c11"
                  >
                     
                    almost NaN years
                     ago
                  </label>
                </div>
                <div
                  className="c12"
                />
                <div
                  className="c9"
                >
                  <label
                    className="c15 c11"
                  >
                    Updated: 
                  </label>
                  <label
                    className="c11"
                  >
                     
                    almost NaN years
                     ago
                  </label>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c16"
          >
            <div
              className="c17"
            >
              <a
                className="c18 c19 c20 c21"
                data-ui-button="true"
                href="http://localhost/images/~create/2252839a-e698-ceec-afac-9549ad0c6624"
                icon={true}
                rel="noopener noreferrer"
                target="__blank"
              >
                <div
                  className="c22"
                >
                  <svg
                    className=""
                    height="20"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 16.67 20"
                    width="16.67"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M12.83,8v6h-9V8h9m0-1h-9a1,1,0,0,0-1,1v6a1,1,0,0,0,1,1h9a1,1,0,0,0,1-1V8a1,1,0,0,0-1-1Zm-7,5.5v-3a.5.5,0,0,0-.5-.5h0a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,.5.5h0A.5.5,0,0,0,5.83,12.5Zm2,0v-3a.5.5,0,0,0-.5-.5h0a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,.5.5h0A.5.5,0,0,0,7.83,12.5Zm2,0v-3a.5.5,0,0,0-.5-.5h0a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,.5.5h0A.5.5,0,0,0,9.83,12.5Zm2,0v-3a.5.5,0,0,0-.5-.5h0a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,.5.5h0A.5.5,0,0,0,11.83,12.5Zm3.73-8.06L12.22,1.11,11.11,0h-10A1.11,1.11,0,0,0,0,1.11V18.89A1.11,1.11,0,0,0,1.11,20H15.56a1.11,1.11,0,0,0,1.11-1.11V5.56ZM14.83,5h-3V2Zm-13,13V2h9V6h4V18Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </a>
              <span
                name="react-responsive-mock"
                query="only screen and (max-width: 47.9375rem)"
              >
                <button
                  className="c23 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="14"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 13.36 14"
                    width="13.36"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M2.53,1.68a.81.81,0,0,1,.39.1l8.31,4.48a.84.84,0,0,1,0,1.48L2.92,12.22a.81.81,0,0,1-.39.1.85.85,0,0,1-.85-.85V2.53a.85.85,0,0,1,.85-.85M2.53,0A2.53,2.53,0,0,0,0,2.53v8.94A2.53,2.53,0,0,0,3.72,13.7L12,9.22a2.52,2.52,0,0,0,0-4.44L3.72.3A2.5,2.5,0,0,0,2.53,0Z"
                      fill="rgb(216, 216, 216)"
                    />
                  </svg>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (min-width: 48rem)"
              >
                <button
                  className="c25 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="14"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 13.36 14"
                    width="13.36"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M2.53,1.68a.81.81,0,0,1,.39.1l8.31,4.48a.84.84,0,0,1,0,1.48L2.92,12.22a.81.81,0,0,1-.39.1.85.85,0,0,1-.85-.85V2.53a.85.85,0,0,1,.85-.85M2.53,0A2.53,2.53,0,0,0,0,2.53v8.94A2.53,2.53,0,0,0,3.72,13.7L12,9.22a2.52,2.52,0,0,0,0-4.44L3.72.3A2.5,2.5,0,0,0,2.53,0Z"
                      fill="rgb(216, 216, 216)"
                    />
                  </svg>
                  <span>
                    Start
                  </span>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (max-width: 47.9375rem)"
              >
                <button
                  className="c26 c19 c24"
                  data-ui-button="true"
                  disabled={false}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="14"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 14 14"
                    width="14"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M10.75,1.75a1.5,1.5,0,0,1,1.5,1.5v7.5a1.5,1.5,0,0,1-1.5,1.5H3.25a1.5,1.5,0,0,1-1.5-1.5V3.25a1.5,1.5,0,0,1,1.5-1.5h7.5m0-1.75H3.25A3.26,3.26,0,0,0,0,3.25v7.5A3.26,3.26,0,0,0,3.25,14h7.5A3.26,3.26,0,0,0,14,10.75V3.25A3.26,3.26,0,0,0,10.75,0Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (min-width: 48rem)"
              >
                <button
                  className="c27 c19 c24"
                  data-ui-button="true"
                  disabled={false}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="14"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 14 14"
                    width="14"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M10.75,1.75a1.5,1.5,0,0,1,1.5,1.5v7.5a1.5,1.5,0,0,1-1.5,1.5H3.25a1.5,1.5,0,0,1-1.5-1.5V3.25a1.5,1.5,0,0,1,1.5-1.5h7.5m0-1.75H3.25A3.26,3.26,0,0,0,0,3.25v7.5A3.26,3.26,0,0,0,3.25,14h7.5A3.26,3.26,0,0,0,14,10.75V3.25A3.26,3.26,0,0,0,10.75,0Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                  <span>
                    Stop
                  </span>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (max-width: 47.9375rem)"
              >
                <button
                  className="c26 c19 c24"
                  data-ui-button="true"
                  disabled={false}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="21"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    version="1.1"
                    viewBox="0 0 20 21"
                    width="20"
                    xmlns="http://www.w3.org/2000/svg"
                    xmlnsXlink="http://www.w3.org/1999/xlink"
                  >
                    <g
                      transform="translate(17997 -18577)"
                    >
                      <g>
                        <use
                          fill="rgb(73, 73, 73)"
                          transform="matrix(0.866025 0.5 -0.5 0.866025 -17988.7 18577.9)"
                          xlinkHref="#f"
                        />
                      </g>
                    </g>
                    <defs>
                      <path
                        d="M 5.39661 3.57718L 5.3977 5.34469L 10.0255 2.67281L 5.39715 0L 5.39832 2.00201C 2.33086 2.5484 0.00065755 5.23112 0 8.45654C 0.000380483 12.0783 2.93556 15.0137 6.55562 15.0143C 10.1774 15.014 13.1128 12.0788 13.1124 8.45702L 11.5697 8.45687C 11.5697 11.2264 9.32527 13.4717 6.55578 13.4716C 3.78629 13.4716 1.54268 11.2262 1.5427 8.45669C 1.54135 6.08718 3.18616 4.10012 5.39661 3.57718Z"
                        fillRule="evenodd"
                        id="f"
                      />
                    </defs>
                  </svg>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (min-width: 48rem)"
              >
                <button
                  className="c27 c19 c24"
                  data-ui-button="true"
                  disabled={false}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="21"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    version="1.1"
                    viewBox="0 0 20 21"
                    width="20"
                    xmlns="http://www.w3.org/2000/svg"
                    xmlnsXlink="http://www.w3.org/1999/xlink"
                  >
                    <g
                      transform="translate(17997 -18577)"
                    >
                      <g>
                        <use
                          fill="rgb(73, 73, 73)"
                          transform="matrix(0.866025 0.5 -0.5 0.866025 -17988.7 18577.9)"
                          xlinkHref="#f"
                        />
                      </g>
                    </g>
                    <defs>
                      <path
                        d="M 5.39661 3.57718L 5.3977 5.34469L 10.0255 2.67281L 5.39715 0L 5.39832 2.00201C 2.33086 2.5484 0.00065755 5.23112 0 8.45654C 0.000380483 12.0783 2.93556 15.0137 6.55562 15.0143C 10.1774 15.014 13.1128 12.0788 13.1124 8.45702L 11.5697 8.45687C 11.5697 11.2264 9.32527 13.4717 6.55578 13.4716C 3.78629 13.4716 1.54268 11.2262 1.5427 8.45669C 1.54135 6.08718 3.18616 4.10012 5.39661 3.57718Z"
                        fillRule="evenodd"
                        id="f"
                      />
                    </defs>
                  </svg>
                  <span>
                    Reboot
                  </span>
                </button>
              </span>
            </div>
            <div
              className="c28"
            >
              <span
                name="react-responsive-mock"
                query="only screen and (max-width: 47.9375rem)"
              >
                <button
                  className="c29 c19 c24"
                  data-ui-button="true"
                  disabled={false}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="16"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 12 16"
                    width="12"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M2.67,0V1.5H0V3H12V1.5H9.33V0ZM0,4,1.33,16h9.34L12,4ZM8,5h2.51l-1,10H8ZM1.49,5H4V15H2.53ZM7,15H5V5H7Z"
                      fill="rgb(210, 67, 58)"
                    />
                  </svg>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (min-width: 48rem)"
              >
                <button
                  className="c30 c19 c24"
                  data-ui-button="true"
                  disabled={false}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="16"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 12 16"
                    width="12"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M2.67,0V1.5H0V3H12V1.5H9.33V0ZM0,4,1.33,16h9.34L12,4ZM8,5h2.51l-1,10H8ZM1.49,5H4V15H2.53ZM7,15H5V5H7Z"
                      fill="rgb(210, 67, 58)"
                    />
                  </svg>
                  <span>
                    Remove
                  </span>
                </button>
              </span>
            </div>
          </div>
          <div
            className="c31"
          >
            <div
              className="c32 c0"
              height="0.0625rem"
            />
          </div>
          <div
            className="c0"
          >
            <div
              className="c33"
            >
              <label
                className="c34"
                htmlFor=""
              >
                Short ID
              </label>
              <div
                className="c35"
              >
                <input
                  className="c36"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value="2252839a"
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c37"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c0"
          >
            <div
              className="c33"
            >
              <label
                className="c34"
                htmlFor=""
              >
                ID
              </label>
              <div
                className="c35"
              >
                <input
                  className="c36"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value="2252839a-e698-ceec-afac-9549ad0c6624"
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c37"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c0"
          >
            <div
              className="c33"
            >
              <label
                className="c34"
                htmlFor=""
              >
                CN UUID
              </label>
              <div
                className="c35"
              >
                <input
                  className="c36"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value="70bb1cee-dba3-11e3-a799-002590e4f2b0"
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c37"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c0"
          >
            <div
              className="c33"
            >
              <label
                className="c34"
                htmlFor=""
              >
                Image UUID
              </label>
              <div
                className="c35"
              >
                <input
                  className="c36"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value="19aa3328-0025-11e7-a19a-c39077bfd4cf"
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c37"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c0"
          >
            <div
              className="c33"
            >
              <label
                className="c34"
                htmlFor=""
              >
                Login
              </label>
              <div
                className="c35"
              >
                <input
                  className="c36"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value="ssh root@72.2.119.146"
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c37"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c0"
          >
            <div
              className="c33"
            >
              <label
                className="c34"
                htmlFor=""
              >
                Public IP address 1
              </label>
              <div
                className="c35"
              >
                <input
                  className="c36"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value="72.2.119.146"
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c37"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c0"
          >
            <div
              className="c33"
            >
              <label
                className="c34"
                htmlFor=""
              >
                Public IP address 2
              </label>
              <div
                className="c35"
              >
                <input
                  className="c36"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value="72.2.119.146"
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c37"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c0"
          >
            <div
              className="c33"
            >
              <label
                className="c34"
                htmlFor=""
              >
                Private IP address 1
              </label>
              <div
                className="c35"
              >
                <input
                  className="c36"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value="10.112.5.63"
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c37"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c0"
          >
            <div
              className="c33"
            >
              <label
                className="c34"
                htmlFor=""
              >
                Private IP address 2
              </label>
              <div
                className="c38"
              >
                <input
                  className="c36"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value="10.112.5.63"
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c37"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`renders <Summary starting stopping rebooting removing /> without throwing 1`] = `
.c0 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.625rem;
  margin-left: -0.625rem;
}

.c5 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.625rem;
  margin-left: -0.625rem;
}

.c16 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.625rem;
  margin-left: -0.625rem;
}

.c1 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c6 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c17 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c30 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c35 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c8 {
  margin-top: 0.75rem;
  margin-bottom: 1.125rem;
}

.c14 {
  margin-top: 0.375rem;
}

.c33 {
  margin-top: 1.5rem;
  margin-bottom: 1.875rem;
}

.c4 {
  padding: 1.5rem;
}

.c22 {
  padding-top: 0.1875rem;
}

.c21 {
  background-color: transparent;
  -webkit-text-decoration-skip: objects;
  text-decoration-skip: objects;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
}

.c24 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  text-transform: none;
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  min-width: 7.5rem;
}

.c24::-moz-focus-inner,
.c24[type='button']::-moz-focus-inner,
.c24[type='reset']::-moz-focus-inner,
.c24[type='submit']::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

.c24:-moz-focusring,
.c24[type='button']:-moz-focusring,
.c24[type='reset']:-moz-focusring,
.c24[type='submit']:-moz-focusring {
  outline: 0.0625rem dotted ButtonText;
}

.c24 + button,
.c24 + a {
  margin-left: 0.375rem;
}

.c20 {
  color: rgb(59,70,204);
  -webkit-text-fill-color: currentcolor;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
}

.c20:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c39 {
  cursor: pointer;
}

.c26 {
  fill: rgb(59,70,204);
  stroke: rgb(59,70,204);
  -webkit-animation: iCqDak 1.5s ease-out 0s infinite;
  animation: iCqDak 1.5s ease-out 0s infinite;
}

.c27 {
  fill: rgb(59,70,204);
  stroke: rgb(59,70,204);
  -webkit-animation: iCqDak 1.5s ease-out 0s infinite;
  animation: iCqDak 1.5s ease-out 0s infinite;
  -webkit-animation-delay: 0.5s;
  animation-delay: 0.5s;
}

.c28 {
  fill: rgb(59,70,204);
  stroke: rgb(59,70,204);
  -webkit-animation: iCqDak 1.5s ease-out 0s infinite;
  animation: iCqDak 1.5s ease-out 0s infinite;
  -webkit-animation-delay: 1s;
  animation-delay: 1s;
}

.c25 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 1.25rem;
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
}

.c19 {
  display: inline-block;
}

.c19 + button,
.c19 + a {
  margin-left: 0.375rem;
}

.c18 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  padding: 0.625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  min-height: 0rem;
  height: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-weight: 500;
}

.c18:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c18:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c18:active,
.c18:active:hover,
.c18:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c18[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c18:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c18:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c18:active,
.c18:active:hover,
.c18:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c18 svg + span {
  margin-left: 0.75rem;
}

.c18 svg {
  max-height: 1.125rem;
}

.c23 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  padding: 0.625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  min-height: 0rem;
  height: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c23:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c23:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c23:active,
.c23:active:hover,
.c23:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c23[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c23:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c23:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c23:active,
.c23:active:hover,
.c23:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c23:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c23:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c23:active,
.c23:active:hover,
.c23:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c23 svg + span {
  margin-left: 0.75rem;
}

.c23 svg {
  max-height: 1.125rem;
}

.c29 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-weight: 500;
}

.c29:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c29:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c29:active,
.c29:active:hover,
.c29:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c29[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c29:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c29:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c29:active,
.c29:active:hover,
.c29:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c29:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c29:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c29:active,
.c29:active:hover,
.c29:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c29 svg + span {
  margin-left: 0.75rem;
}

.c29 svg {
  max-height: 1.125rem;
}

.c31 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  color: rgb(210,67,58);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(210,67,58);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  padding: 0.625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  min-height: 0rem;
  height: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  float: right;
}

.c31:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c31:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c31:active,
.c31:active:hover,
.c31:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c31[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c31:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c31:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c31:active,
.c31:active:hover,
.c31:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c31:focus {
  color: rgb(205,37,27);
  background-color: rgb(255,255,255);
  border-color: rgb(205,37,27);
}

.c31:hover {
  color: rgb(205,37,27);
  background-color: rgb(255,255,255);
  border-color: rgb(205,37,27);
}

.c31:active,
.c31:active:hover,
.c31:active:focus {
  background-color: rgba(210,67,58,0.1);
  border-color: rgb(205,37,27);
}

.c31:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c31:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c31:active,
.c31:active:hover,
.c31:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c31 svg + span {
  margin-left: 0.75rem;
}

.c31 svg {
  max-height: 1.125rem;
}

.c32 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  color: rgb(210,67,58);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(210,67,58);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-weight: 500;
  float: right;
}

.c32:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c32:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c32:active,
.c32:active:hover,
.c32:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c32[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c32:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c32:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c32:active,
.c32:active:hover,
.c32:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c32:focus {
  color: rgb(205,37,27);
  background-color: rgb(255,255,255);
  border-color: rgb(205,37,27);
}

.c32:hover {
  color: rgb(205,37,27);
  background-color: rgb(255,255,255);
  border-color: rgb(205,37,27);
}

.c32:active,
.c32:active:hover,
.c32:active:focus {
  background-color: rgba(210,67,58,0.1);
  border-color: rgb(205,37,27);
}

.c32:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c32:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c32:active,
.c32:active:hover,
.c32:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c32 svg + span {
  margin-left: 0.75rem;
}

.c32 svg {
  max-height: 1.125rem;
}

.c13 {
  width: 0.9375rem;
  height: 0.9375rem;
  border-radius: 50%;
  display: inline-block;
  margin-right: 0.375rem;
  margin-left: 0rem;
}

.c11 {
  font-size: 0.9375rem;
  line-height: 1.125rem;
  font-style: normal;
  font-stretch: normal;
  display: block;
  color: rgb(70,70,70);
  text-align: left;
  margin-bottom: 0.1875rem;
}

.c36 {
  font-size: 0.9375rem;
  line-height: 1.125rem;
  font-style: normal;
  font-stretch: normal;
  display: block;
  color: rgb(70,70,70);
  text-align: left;
  margin-bottom: 0.1875rem;
  margin-right: 0.75rem;
  font-weight: 600;
  white-space: pre;
  font-size: 0.8125rem;
}

.c7 {
  color: rgb(73,73,73);
  font-weight: normal;
  line-height: 1.875rem;
  font-size: 1.5rem;
  margin: 0;
}

.c7 + p,
.c7 + small,
.c7 + h1,
.c7 + h2,
.c7 + label,
.c7 + h3,
.c7 + h4,
.c7 + h5,
.c7 + div,
.c7 + span {
  margin-top: 1.5rem;
}

.c34 {
  background-color: rgb(216,216,216);
  margin: 0;
  height: 0.0625rem;
}

.c2 {
  box-sizing: content-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  border-width: 0.0625rem;
  border-style: solid;
  -webkit-transition: all 300ms ease;
  transition: all 300ms ease;
  color: rgb(73,73,73);
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c3 {
  box-sizing: content-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  border-width: 0.0625rem;
  border-style: solid;
  -webkit-transition: all 300ms ease;
  transition: all 300ms ease;
  color: rgb(73,73,73);
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  box-sizing: border-box;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  border-width: 0;
  margin-bottom: 0;
  background-color: transparent;
}

.c3 > [name='card']:not(:last-child) {
  margin-bottom: 0.8125rem;
}

.c3 > [name='card']:last-child {
  margin-bottom: 0.4375rem;
}

.c38 {
  box-sizing: border-box;
  width: 18.75rem;
  height: 3rem;
  min-height: 3rem;
  padding: 0.8125rem 0.75rem;
  border-radius: 0.25rem;
  background-color: rgb(255,255,255);
  border: 0.0625rem solid rgb(216,216,216);
  color: rgb(73,73,73);
  font-size: 0.9375rem;
  line-height: normal !important;
  font-style: normal;
  font-stretch: normal;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  outline: 0;
  font-family: "Roboto Mono",monospace;
  width: 100%;
  min-width: 100%;
  text-overflow: ellipsis;
}

.c38:focus {
  border-color: rgb(59,70,204);
  outline: 0;
}

.c38::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c38::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c38:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c38:invalid {
  box-shadow: none;
}

.c38:disabled {
  background-color: rgb(250,250,250);
  color: rgb(216,216,216);
  cursor: not-allowed;
}

.c38:disabled::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c38:disabled::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c38:disabled:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c38:disabled {
  color: rgb(73,73,73);
}

.c38:disabled::-webkit-input-placeholder {
  color: rgb(73,73,73);
}

.c38:disabled::-moz-placeholder {
  color: rgb(73,73,73);
}

.c38:disabled:-ms-input-placeholder {
  color: rgb(73,73,73);
}

.c40 {
  box-sizing: border-box;
  width: 18.75rem;
  height: 3rem;
  min-height: 3rem;
  padding: 0.8125rem 0.75rem;
  border-radius: 0.25rem;
  background-color: rgb(255,255,255);
  border: 0.0625rem solid rgb(216,216,216);
  color: rgb(73,73,73);
  font-size: 0.9375rem;
  line-height: normal !important;
  font-style: normal;
  font-stretch: normal;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  outline: 0;
  font-family: "Roboto Mono",monospace;
  width: 100%;
  min-width: 100%;
}

.c40:focus {
  border-color: rgb(59,70,204);
  outline: 0;
}

.c40::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c40::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c40:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c40:invalid {
  box-shadow: none;
}

.c40:disabled {
  background-color: rgb(250,250,250);
  color: rgb(216,216,216);
  cursor: not-allowed;
}

.c40:disabled::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c40:disabled::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c40:disabled:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c40:disabled {
  color: rgb(73,73,73);
}

.c40:disabled::-webkit-input-placeholder {
  color: rgb(73,73,73);
}

.c40:disabled::-moz-placeholder {
  color: rgb(73,73,73);
}

.c40:disabled:-ms-input-placeholder {
  color: rgb(73,73,73);
}

.c37 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 0.625rem;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c37 input {
  padding-right: 1.875rem;
}

.c37 div {
  position: relative;
  left: -1.625rem;
}

.c15 {
  opacity: 0.5;
  padding-right: 0.1875rem;
}

.c10 {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.c9 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.c12 {
  width: 0.0625rem;
  background: rgb(216,216,216);
  height: 1.5rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end;
  margin: 0 0.75rem;
}

@media only screen and (min-width:0em) {
  .c5 {
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
  }
}

@media only screen and (min-width:0em) {
  .c16 {
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
  }
}

@media only screen and (min-width:0em) {
  .c1 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media only screen and (min-width:48em) {
  .c1 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media only screen and (min-width:64em) {
  .c1 {
    -webkit-flex-basis: 75%;
    -ms-flex-preferred-size: 75%;
    flex-basis: 75%;
    max-width: 75%;
  }
}

@media only screen and (min-width:0em) {
  .c6 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media only screen and (min-width:0em) {
  .c17 {
    -webkit-flex-basis: 75%;
    -ms-flex-preferred-size: 75%;
    flex-basis: 75%;
    max-width: 75%;
  }
}

@media only screen and (min-width:0em) {
  .c30 {
    -webkit-flex-basis: 25%;
    -ms-flex-preferred-size: 25%;
    flex-basis: 25%;
    max-width: 25%;
  }
}

@media only screen and (min-width:0em) {
  .c35 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media only screen and (min-width:64em) {
  .c35 {
    -webkit-flex-basis: 58.333333333333336%;
    -ms-flex-preferred-size: 58.333333333333336%;
    flex-basis: 58.333333333333336%;
    max-width: 58.333333333333336%;
  }
}

@media (max-width:47.9375rem) {
  .c9 {
    display: block;
  }
}

@media (max-width:47.9375rem) {
  .c12 {
    display: none;
  }
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <div
      className="c2"
      disabled={false}
      name="card"
    >
      <div
        className="c3"
        name="card-outlet"
      >
        <div
          className="c4"
        >
          <div
            className="c5"
          >
            <div
              className="c6"
            >
              <h2
                className="c7"
              />
            </div>
          </div>
          <div
            className="c8"
          >
            <div
              className="c9"
            >
              <label
                className="c10 c11"
              >
                Custom Image
              </label>
              <div
                className="c12"
              />
              <label
                className="c10 c11"
              >
                Hardware virtual machine
              </label>
              <div
                className="c12"
              />
              <label
                className="c10 c11"
              />
              <div
                className="c12"
              />
              <div
                className="c9"
              >
                <span
                  className="c13"
                  color={undefined}
                  size="0.9375rem"
                />
                
              </div>
            </div>
            <div
              className="c14"
            >
              <div
                className="c9"
              >
                <div
                  className="c9"
                >
                  <label
                    className="c15 c11"
                  >
                    Created: 
                  </label>
                  <label
                    className="c11"
                  >
                     
                    almost NaN years
                     ago
                  </label>
                </div>
                <div
                  className="c12"
                />
                <div
                  className="c9"
                >
                  <label
                    className="c15 c11"
                  >
                    Updated: 
                  </label>
                  <label
                    className="c11"
                  >
                     
                    almost NaN years
                     ago
                  </label>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c16"
          >
            <div
              className="c17"
            >
              <a
                className="c18 c19 c20 c21"
                data-ui-button="true"
                href="http://localhost/images/~create/undefined"
                icon={true}
                rel="noopener noreferrer"
                target="__blank"
              >
                <div
                  className="c22"
                >
                  <svg
                    className=""
                    height="20"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 16.67 20"
                    width="16.67"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M12.83,8v6h-9V8h9m0-1h-9a1,1,0,0,0-1,1v6a1,1,0,0,0,1,1h9a1,1,0,0,0,1-1V8a1,1,0,0,0-1-1Zm-7,5.5v-3a.5.5,0,0,0-.5-.5h0a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,.5.5h0A.5.5,0,0,0,5.83,12.5Zm2,0v-3a.5.5,0,0,0-.5-.5h0a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,.5.5h0A.5.5,0,0,0,7.83,12.5Zm2,0v-3a.5.5,0,0,0-.5-.5h0a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,.5.5h0A.5.5,0,0,0,9.83,12.5Zm2,0v-3a.5.5,0,0,0-.5-.5h0a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,.5.5h0A.5.5,0,0,0,11.83,12.5Zm3.73-8.06L12.22,1.11,11.11,0h-10A1.11,1.11,0,0,0,0,1.11V18.89A1.11,1.11,0,0,0,1.11,20H15.56a1.11,1.11,0,0,0,1.11-1.11V5.56ZM14.83,5h-3V2Zm-13,13V2h9V6h4V18Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </a>
              <span
                name="react-responsive-mock"
                query="only screen and (max-width: 47.9375rem)"
              >
                <button
                  className="c23 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <div
                    className="c25"
                  >
                    <svg
                      height="10"
                      width="28"
                    >
                      <rect
                        className="c26"
                        height="6"
                        width="6"
                        x="2"
                        y="2"
                      />
                      <rect
                        className="c27"
                        height="6"
                        width="6"
                        x="11"
                        y="2"
                      />
                      <rect
                        className="c28"
                        height="6"
                        width="6"
                        x="20"
                        y="2"
                      />
                    </svg>
                  </div>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (min-width: 48rem)"
              >
                <button
                  className="c29 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <div
                    className="c25"
                  >
                    <svg
                      height="10"
                      width="28"
                    >
                      <rect
                        className="c26"
                        height="6"
                        width="6"
                        x="2"
                        y="2"
                      />
                      <rect
                        className="c27"
                        height="6"
                        width="6"
                        x="11"
                        y="2"
                      />
                      <rect
                        className="c28"
                        height="6"
                        width="6"
                        x="20"
                        y="2"
                      />
                    </svg>
                  </div>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (max-width: 47.9375rem)"
              >
                <button
                  className="c23 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <div
                    className="c25"
                  >
                    <svg
                      height="10"
                      width="28"
                    >
                      <rect
                        className="c26"
                        height="6"
                        width="6"
                        x="2"
                        y="2"
                      />
                      <rect
                        className="c27"
                        height="6"
                        width="6"
                        x="11"
                        y="2"
                      />
                      <rect
                        className="c28"
                        height="6"
                        width="6"
                        x="20"
                        y="2"
                      />
                    </svg>
                  </div>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (min-width: 48rem)"
              >
                <button
                  className="c29 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <div
                    className="c25"
                  >
                    <svg
                      height="10"
                      width="28"
                    >
                      <rect
                        className="c26"
                        height="6"
                        width="6"
                        x="2"
                        y="2"
                      />
                      <rect
                        className="c27"
                        height="6"
                        width="6"
                        x="11"
                        y="2"
                      />
                      <rect
                        className="c28"
                        height="6"
                        width="6"
                        x="20"
                        y="2"
                      />
                    </svg>
                  </div>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (max-width: 47.9375rem)"
              >
                <button
                  className="c23 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <div
                    className="c25"
                  >
                    <svg
                      height="10"
                      width="28"
                    >
                      <rect
                        className="c26"
                        height="6"
                        width="6"
                        x="2"
                        y="2"
                      />
                      <rect
                        className="c27"
                        height="6"
                        width="6"
                        x="11"
                        y="2"
                      />
                      <rect
                        className="c28"
                        height="6"
                        width="6"
                        x="20"
                        y="2"
                      />
                    </svg>
                  </div>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (min-width: 48rem)"
              >
                <button
                  className="c29 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <div
                    className="c25"
                  >
                    <svg
                      height="10"
                      width="28"
                    >
                      <rect
                        className="c26"
                        height="6"
                        width="6"
                        x="2"
                        y="2"
                      />
                      <rect
                        className="c27"
                        height="6"
                        width="6"
                        x="11"
                        y="2"
                      />
                      <rect
                        className="c28"
                        height="6"
                        width="6"
                        x="20"
                        y="2"
                      />
                    </svg>
                  </div>
                </button>
              </span>
            </div>
            <div
              className="c30"
            >
              <span
                name="react-responsive-mock"
                query="only screen and (max-width: 47.9375rem)"
              >
                <button
                  className="c31 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <div
                    className="c25"
                  >
                    <svg
                      height="10"
                      width="28"
                    >
                      <rect
                        className="c26"
                        height="6"
                        width="6"
                        x="2"
                        y="2"
                      />
                      <rect
                        className="c27"
                        height="6"
                        width="6"
                        x="11"
                        y="2"
                      />
                      <rect
                        className="c28"
                        height="6"
                        width="6"
                        x="20"
                        y="2"
                      />
                    </svg>
                  </div>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (min-width: 48rem)"
              >
                <button
                  className="c32 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <div
                    className="c25"
                  >
                    <svg
                      height="10"
                      width="28"
                    >
                      <rect
                        className="c26"
                        height="6"
                        width="6"
                        x="2"
                        y="2"
                      />
                      <rect
                        className="c27"
                        height="6"
                        width="6"
                        x="11"
                        y="2"
                      />
                      <rect
                        className="c28"
                        height="6"
                        width="6"
                        x="20"
                        y="2"
                      />
                    </svg>
                  </div>
                </button>
              </span>
            </div>
          </div>
          <div
            className="c33"
          >
            <div
              className="c34 c0"
              height="0.0625rem"
            />
          </div>
          <div
            className="c0"
          >
            <div
              className="c35"
            >
              <label
                className="c36"
                htmlFor=""
              >
                Short ID
              </label>
              <div
                className="c37"
              >
                <input
                  className="c38"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value=""
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c39"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c0"
          >
            <div
              className="c35"
            >
              <label
                className="c36"
                htmlFor=""
              >
                ID
              </label>
              <div
                className="c37"
              >
                <input
                  className="c38"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value={undefined}
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c39"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c0"
          >
            <div
              className="c35"
            >
              <label
                className="c36"
                htmlFor=""
              >
                CN UUID
              </label>
              <div
                className="c37"
              >
                <input
                  className="c38"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value={undefined}
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c39"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c0"
          >
            <div
              className="c35"
            >
              <label
                className="c36"
                htmlFor=""
              >
                Login
              </label>
              <div
                className="c37"
              >
                <input
                  className="c40"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value="ssh root@undefined"
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c39"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`renders <Summary state /> without throwing 1`] = `
.c0 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.625rem;
  margin-left: -0.625rem;
}

.c5 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.625rem;
  margin-left: -0.625rem;
}

.c16 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.625rem;
  margin-left: -0.625rem;
}

.c1 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c6 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c17 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c28 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c33 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c8 {
  margin-top: 0.75rem;
  margin-bottom: 1.125rem;
}

.c14 {
  margin-top: 0.375rem;
}

.c31 {
  margin-top: 1.5rem;
  margin-bottom: 1.875rem;
}

.c4 {
  padding: 1.5rem;
}

.c22 {
  padding-top: 0.1875rem;
}

.c21 {
  background-color: transparent;
  -webkit-text-decoration-skip: objects;
  text-decoration-skip: objects;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
}

.c24 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  text-transform: none;
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  min-width: 7.5rem;
}

.c24::-moz-focus-inner,
.c24[type='button']::-moz-focus-inner,
.c24[type='reset']::-moz-focus-inner,
.c24[type='submit']::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

.c24:-moz-focusring,
.c24[type='button']:-moz-focusring,
.c24[type='reset']:-moz-focusring,
.c24[type='submit']:-moz-focusring {
  outline: 0.0625rem dotted ButtonText;
}

.c24 + button,
.c24 + a {
  margin-left: 0.375rem;
}

.c20 {
  color: rgb(59,70,204);
  -webkit-text-fill-color: currentcolor;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
}

.c20:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c37 {
  cursor: pointer;
}

.c19 {
  display: inline-block;
}

.c19 + button,
.c19 + a {
  margin-left: 0.375rem;
}

.c18 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  padding: 0.625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  min-height: 0rem;
  height: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-weight: 500;
}

.c18:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c18:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c18:active,
.c18:active:hover,
.c18:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c18[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c18:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c18:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c18:active,
.c18:active:hover,
.c18:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c18 svg + span {
  margin-left: 0.75rem;
}

.c18 svg {
  max-height: 1.125rem;
}

.c23 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  padding: 0.625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  min-height: 0rem;
  height: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c23:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c23:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c23:active,
.c23:active:hover,
.c23:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c23[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c23:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c23:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c23:active,
.c23:active:hover,
.c23:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c23:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c23:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c23:active,
.c23:active:hover,
.c23:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c23 svg + span {
  margin-left: 0.75rem;
}

.c23 svg {
  max-height: 1.125rem;
}

.c25 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-weight: 500;
}

.c25:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c25:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c25:active,
.c25:active:hover,
.c25:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c25[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c25:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c25:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c25:active,
.c25:active:hover,
.c25:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c25:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c25:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c25:active,
.c25:active:hover,
.c25:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c25 svg + span {
  margin-left: 0.75rem;
}

.c25 svg {
  max-height: 1.125rem;
}

.c26 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  padding: 0.625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  min-height: 0rem;
  height: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c26:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c26:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c26:active,
.c26:active:hover,
.c26:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c26[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c26:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c26:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c26:active,
.c26:active:hover,
.c26:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c26 svg + span {
  margin-left: 0.75rem;
}

.c26 svg {
  max-height: 1.125rem;
}

.c27 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-weight: 500;
}

.c27:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c27:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c27:active,
.c27:active:hover,
.c27:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c27[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c27:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c27:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c27:active,
.c27:active:hover,
.c27:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c27 svg + span {
  margin-left: 0.75rem;
}

.c27 svg {
  max-height: 1.125rem;
}

.c29 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  color: rgb(210,67,58);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(210,67,58);
  padding: 0.625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  min-height: 0rem;
  height: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  float: right;
}

.c29:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c29:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c29:active,
.c29:active:hover,
.c29:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c29[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c29:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c29:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c29:active,
.c29:active:hover,
.c29:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c29:focus {
  color: rgb(205,37,27);
  background-color: rgb(255,255,255);
  border-color: rgb(205,37,27);
}

.c29:hover {
  color: rgb(205,37,27);
  background-color: rgb(255,255,255);
  border-color: rgb(205,37,27);
}

.c29:active,
.c29:active:hover,
.c29:active:focus {
  background-color: rgba(210,67,58,0.1);
  border-color: rgb(205,37,27);
}

.c29 svg + span {
  margin-left: 0.75rem;
}

.c29 svg {
  max-height: 1.125rem;
}

.c30 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  color: rgb(210,67,58);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(210,67,58);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-weight: 500;
  float: right;
}

.c30:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c30:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c30:active,
.c30:active:hover,
.c30:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c30[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c30:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c30:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c30:active,
.c30:active:hover,
.c30:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c30:focus {
  color: rgb(205,37,27);
  background-color: rgb(255,255,255);
  border-color: rgb(205,37,27);
}

.c30:hover {
  color: rgb(205,37,27);
  background-color: rgb(255,255,255);
  border-color: rgb(205,37,27);
}

.c30:active,
.c30:active:hover,
.c30:active:focus {
  background-color: rgba(210,67,58,0.1);
  border-color: rgb(205,37,27);
}

.c30 svg + span {
  margin-left: 0.75rem;
}

.c30 svg {
  max-height: 1.125rem;
}

.c13 {
  width: 0.9375rem;
  height: 0.9375rem;
  border-radius: 50%;
  background-color: rgb(0,152,88);
  display: inline-block;
  margin-right: 0.375rem;
  margin-left: 0rem;
}

.c11 {
  font-size: 0.9375rem;
  line-height: 1.125rem;
  font-style: normal;
  font-stretch: normal;
  display: block;
  color: rgb(70,70,70);
  text-align: left;
  margin-bottom: 0.1875rem;
}

.c34 {
  font-size: 0.9375rem;
  line-height: 1.125rem;
  font-style: normal;
  font-stretch: normal;
  display: block;
  color: rgb(70,70,70);
  text-align: left;
  margin-bottom: 0.1875rem;
  margin-right: 0.75rem;
  font-weight: 600;
  white-space: pre;
  font-size: 0.8125rem;
}

.c7 {
  color: rgb(73,73,73);
  font-weight: normal;
  line-height: 1.875rem;
  font-size: 1.5rem;
  margin: 0;
}

.c7 + p,
.c7 + small,
.c7 + h1,
.c7 + h2,
.c7 + label,
.c7 + h3,
.c7 + h4,
.c7 + h5,
.c7 + div,
.c7 + span {
  margin-top: 1.5rem;
}

.c32 {
  background-color: rgb(216,216,216);
  margin: 0;
  height: 0.0625rem;
}

.c2 {
  box-sizing: content-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  border-width: 0.0625rem;
  border-style: solid;
  -webkit-transition: all 300ms ease;
  transition: all 300ms ease;
  color: rgb(73,73,73);
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c3 {
  box-sizing: content-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  border-width: 0.0625rem;
  border-style: solid;
  -webkit-transition: all 300ms ease;
  transition: all 300ms ease;
  color: rgb(73,73,73);
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  box-sizing: border-box;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  border-width: 0;
  margin-bottom: 0;
  background-color: transparent;
}

.c3 > [name='card']:not(:last-child) {
  margin-bottom: 0.8125rem;
}

.c3 > [name='card']:last-child {
  margin-bottom: 0.4375rem;
}

.c36 {
  box-sizing: border-box;
  width: 18.75rem;
  height: 3rem;
  min-height: 3rem;
  padding: 0.8125rem 0.75rem;
  border-radius: 0.25rem;
  background-color: rgb(255,255,255);
  border: 0.0625rem solid rgb(216,216,216);
  color: rgb(73,73,73);
  font-size: 0.9375rem;
  line-height: normal !important;
  font-style: normal;
  font-stretch: normal;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  outline: 0;
  font-family: "Roboto Mono",monospace;
  width: 100%;
  min-width: 100%;
  text-overflow: ellipsis;
}

.c36:focus {
  border-color: rgb(59,70,204);
  outline: 0;
}

.c36::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36:invalid {
  box-shadow: none;
}

.c36:disabled {
  background-color: rgb(250,250,250);
  color: rgb(216,216,216);
  cursor: not-allowed;
}

.c36:disabled::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36:disabled::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36:disabled:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36:disabled {
  color: rgb(73,73,73);
}

.c36:disabled::-webkit-input-placeholder {
  color: rgb(73,73,73);
}

.c36:disabled::-moz-placeholder {
  color: rgb(73,73,73);
}

.c36:disabled:-ms-input-placeholder {
  color: rgb(73,73,73);
}

.c38 {
  box-sizing: border-box;
  width: 18.75rem;
  height: 3rem;
  min-height: 3rem;
  padding: 0.8125rem 0.75rem;
  border-radius: 0.25rem;
  background-color: rgb(255,255,255);
  border: 0.0625rem solid rgb(216,216,216);
  color: rgb(73,73,73);
  font-size: 0.9375rem;
  line-height: normal !important;
  font-style: normal;
  font-stretch: normal;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  outline: 0;
  font-family: "Roboto Mono",monospace;
  width: 100%;
  min-width: 100%;
}

.c38:focus {
  border-color: rgb(59,70,204);
  outline: 0;
}

.c38::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c38::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c38:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c38:invalid {
  box-shadow: none;
}

.c38:disabled {
  background-color: rgb(250,250,250);
  color: rgb(216,216,216);
  cursor: not-allowed;
}

.c38:disabled::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c38:disabled::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c38:disabled:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c38:disabled {
  color: rgb(73,73,73);
}

.c38:disabled::-webkit-input-placeholder {
  color: rgb(73,73,73);
}

.c38:disabled::-moz-placeholder {
  color: rgb(73,73,73);
}

.c38:disabled:-ms-input-placeholder {
  color: rgb(73,73,73);
}

.c35 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 0.625rem;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c35 input {
  padding-right: 1.875rem;
}

.c35 div {
  position: relative;
  left: -1.625rem;
}

.c15 {
  opacity: 0.5;
  padding-right: 0.1875rem;
}

.c10 {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.c9 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.c12 {
  width: 0.0625rem;
  background: rgb(216,216,216);
  height: 1.5rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end;
  margin: 0 0.75rem;
}

@media only screen and (min-width:0em) {
  .c5 {
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
  }
}

@media only screen and (min-width:0em) {
  .c16 {
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
  }
}

@media only screen and (min-width:0em) {
  .c1 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media only screen and (min-width:48em) {
  .c1 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media only screen and (min-width:64em) {
  .c1 {
    -webkit-flex-basis: 75%;
    -ms-flex-preferred-size: 75%;
    flex-basis: 75%;
    max-width: 75%;
  }
}

@media only screen and (min-width:0em) {
  .c6 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media only screen and (min-width:0em) {
  .c17 {
    -webkit-flex-basis: 75%;
    -ms-flex-preferred-size: 75%;
    flex-basis: 75%;
    max-width: 75%;
  }
}

@media only screen and (min-width:0em) {
  .c28 {
    -webkit-flex-basis: 25%;
    -ms-flex-preferred-size: 25%;
    flex-basis: 25%;
    max-width: 25%;
  }
}

@media only screen and (min-width:0em) {
  .c33 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media only screen and (min-width:64em) {
  .c33 {
    -webkit-flex-basis: 58.333333333333336%;
    -ms-flex-preferred-size: 58.333333333333336%;
    flex-basis: 58.333333333333336%;
    max-width: 58.333333333333336%;
  }
}

@media (max-width:47.9375rem) {
  .c9 {
    display: block;
  }
}

@media (max-width:47.9375rem) {
  .c12 {
    display: none;
  }
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <div
      className="c2"
      disabled={false}
      name="card"
    >
      <div
        className="c3"
        name="card-outlet"
      >
        <div
          className="c4"
        >
          <div
            className="c5"
          >
            <div
              className="c6"
            >
              <h2
                className="c7"
              />
            </div>
          </div>
          <div
            className="c8"
          >
            <div
              className="c9"
            >
              <label
                className="c10 c11"
              >
                Custom Image
              </label>
              <div
                className="c12"
              />
              <label
                className="c10 c11"
              >
                Hardware virtual machine
              </label>
              <div
                className="c12"
              />
              <label
                className="c10 c11"
              />
              <div
                className="c12"
              />
              <div
                className="c9"
              >
                <span
                  className="c13"
                  color="green"
                  size="0.9375rem"
                />
                Running
              </div>
            </div>
            <div
              className="c14"
            >
              <div
                className="c9"
              >
                <div
                  className="c9"
                >
                  <label
                    className="c15 c11"
                  >
                    Created: 
                  </label>
                  <label
                    className="c11"
                  >
                     
                    almost NaN years
                     ago
                  </label>
                </div>
                <div
                  className="c12"
                />
                <div
                  className="c9"
                >
                  <label
                    className="c15 c11"
                  >
                    Updated: 
                  </label>
                  <label
                    className="c11"
                  >
                     
                    almost NaN years
                     ago
                  </label>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c16"
          >
            <div
              className="c17"
            >
              <a
                className="c18 c19 c20 c21"
                data-ui-button="true"
                href="http://localhost/images/~create/undefined"
                icon={true}
                rel="noopener noreferrer"
                target="__blank"
              >
                <div
                  className="c22"
                >
                  <svg
                    className=""
                    height="20"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 16.67 20"
                    width="16.67"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M12.83,8v6h-9V8h9m0-1h-9a1,1,0,0,0-1,1v6a1,1,0,0,0,1,1h9a1,1,0,0,0,1-1V8a1,1,0,0,0-1-1Zm-7,5.5v-3a.5.5,0,0,0-.5-.5h0a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,.5.5h0A.5.5,0,0,0,5.83,12.5Zm2,0v-3a.5.5,0,0,0-.5-.5h0a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,.5.5h0A.5.5,0,0,0,7.83,12.5Zm2,0v-3a.5.5,0,0,0-.5-.5h0a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,.5.5h0A.5.5,0,0,0,9.83,12.5Zm2,0v-3a.5.5,0,0,0-.5-.5h0a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,.5.5h0A.5.5,0,0,0,11.83,12.5Zm3.73-8.06L12.22,1.11,11.11,0h-10A1.11,1.11,0,0,0,0,1.11V18.89A1.11,1.11,0,0,0,1.11,20H15.56a1.11,1.11,0,0,0,1.11-1.11V5.56ZM14.83,5h-3V2Zm-13,13V2h9V6h4V18Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </a>
              <span
                name="react-responsive-mock"
                query="only screen and (max-width: 47.9375rem)"
              >
                <button
                  className="c23 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="14"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 13.36 14"
                    width="13.36"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M2.53,1.68a.81.81,0,0,1,.39.1l8.31,4.48a.84.84,0,0,1,0,1.48L2.92,12.22a.81.81,0,0,1-.39.1.85.85,0,0,1-.85-.85V2.53a.85.85,0,0,1,.85-.85M2.53,0A2.53,2.53,0,0,0,0,2.53v8.94A2.53,2.53,0,0,0,3.72,13.7L12,9.22a2.52,2.52,0,0,0,0-4.44L3.72.3A2.5,2.5,0,0,0,2.53,0Z"
                      fill="rgb(216, 216, 216)"
                    />
                  </svg>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (min-width: 48rem)"
              >
                <button
                  className="c25 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="14"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 13.36 14"
                    width="13.36"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M2.53,1.68a.81.81,0,0,1,.39.1l8.31,4.48a.84.84,0,0,1,0,1.48L2.92,12.22a.81.81,0,0,1-.39.1.85.85,0,0,1-.85-.85V2.53a.85.85,0,0,1,.85-.85M2.53,0A2.53,2.53,0,0,0,0,2.53v8.94A2.53,2.53,0,0,0,3.72,13.7L12,9.22a2.52,2.52,0,0,0,0-4.44L3.72.3A2.5,2.5,0,0,0,2.53,0Z"
                      fill="rgb(216, 216, 216)"
                    />
                  </svg>
                  <span>
                    Start
                  </span>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (max-width: 47.9375rem)"
              >
                <button
                  className="c26 c19 c24"
                  data-ui-button="true"
                  disabled={false}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="14"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 14 14"
                    width="14"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M10.75,1.75a1.5,1.5,0,0,1,1.5,1.5v7.5a1.5,1.5,0,0,1-1.5,1.5H3.25a1.5,1.5,0,0,1-1.5-1.5V3.25a1.5,1.5,0,0,1,1.5-1.5h7.5m0-1.75H3.25A3.26,3.26,0,0,0,0,3.25v7.5A3.26,3.26,0,0,0,3.25,14h7.5A3.26,3.26,0,0,0,14,10.75V3.25A3.26,3.26,0,0,0,10.75,0Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (min-width: 48rem)"
              >
                <button
                  className="c27 c19 c24"
                  data-ui-button="true"
                  disabled={false}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="14"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 14 14"
                    width="14"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M10.75,1.75a1.5,1.5,0,0,1,1.5,1.5v7.5a1.5,1.5,0,0,1-1.5,1.5H3.25a1.5,1.5,0,0,1-1.5-1.5V3.25a1.5,1.5,0,0,1,1.5-1.5h7.5m0-1.75H3.25A3.26,3.26,0,0,0,0,3.25v7.5A3.26,3.26,0,0,0,3.25,14h7.5A3.26,3.26,0,0,0,14,10.75V3.25A3.26,3.26,0,0,0,10.75,0Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                  <span>
                    Stop
                  </span>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (max-width: 47.9375rem)"
              >
                <button
                  className="c26 c19 c24"
                  data-ui-button="true"
                  disabled={false}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="21"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    version="1.1"
                    viewBox="0 0 20 21"
                    width="20"
                    xmlns="http://www.w3.org/2000/svg"
                    xmlnsXlink="http://www.w3.org/1999/xlink"
                  >
                    <g
                      transform="translate(17997 -18577)"
                    >
                      <g>
                        <use
                          fill="rgb(73, 73, 73)"
                          transform="matrix(0.866025 0.5 -0.5 0.866025 -17988.7 18577.9)"
                          xlinkHref="#f"
                        />
                      </g>
                    </g>
                    <defs>
                      <path
                        d="M 5.39661 3.57718L 5.3977 5.34469L 10.0255 2.67281L 5.39715 0L 5.39832 2.00201C 2.33086 2.5484 0.00065755 5.23112 0 8.45654C 0.000380483 12.0783 2.93556 15.0137 6.55562 15.0143C 10.1774 15.014 13.1128 12.0788 13.1124 8.45702L 11.5697 8.45687C 11.5697 11.2264 9.32527 13.4717 6.55578 13.4716C 3.78629 13.4716 1.54268 11.2262 1.5427 8.45669C 1.54135 6.08718 3.18616 4.10012 5.39661 3.57718Z"
                        fillRule="evenodd"
                        id="f"
                      />
                    </defs>
                  </svg>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (min-width: 48rem)"
              >
                <button
                  className="c27 c19 c24"
                  data-ui-button="true"
                  disabled={false}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="21"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    version="1.1"
                    viewBox="0 0 20 21"
                    width="20"
                    xmlns="http://www.w3.org/2000/svg"
                    xmlnsXlink="http://www.w3.org/1999/xlink"
                  >
                    <g
                      transform="translate(17997 -18577)"
                    >
                      <g>
                        <use
                          fill="rgb(73, 73, 73)"
                          transform="matrix(0.866025 0.5 -0.5 0.866025 -17988.7 18577.9)"
                          xlinkHref="#f"
                        />
                      </g>
                    </g>
                    <defs>
                      <path
                        d="M 5.39661 3.57718L 5.3977 5.34469L 10.0255 2.67281L 5.39715 0L 5.39832 2.00201C 2.33086 2.5484 0.00065755 5.23112 0 8.45654C 0.000380483 12.0783 2.93556 15.0137 6.55562 15.0143C 10.1774 15.014 13.1128 12.0788 13.1124 8.45702L 11.5697 8.45687C 11.5697 11.2264 9.32527 13.4717 6.55578 13.4716C 3.78629 13.4716 1.54268 11.2262 1.5427 8.45669C 1.54135 6.08718 3.18616 4.10012 5.39661 3.57718Z"
                        fillRule="evenodd"
                        id="f"
                      />
                    </defs>
                  </svg>
                  <span>
                    Reboot
                  </span>
                </button>
              </span>
            </div>
            <div
              className="c28"
            >
              <span
                name="react-responsive-mock"
                query="only screen and (max-width: 47.9375rem)"
              >
                <button
                  className="c29 c19 c24"
                  data-ui-button="true"
                  disabled={false}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="16"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 12 16"
                    width="12"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M2.67,0V1.5H0V3H12V1.5H9.33V0ZM0,4,1.33,16h9.34L12,4ZM8,5h2.51l-1,10H8ZM1.49,5H4V15H2.53ZM7,15H5V5H7Z"
                      fill="rgb(210, 67, 58)"
                    />
                  </svg>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (min-width: 48rem)"
              >
                <button
                  className="c30 c19 c24"
                  data-ui-button="true"
                  disabled={false}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="16"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 12 16"
                    width="12"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M2.67,0V1.5H0V3H12V1.5H9.33V0ZM0,4,1.33,16h9.34L12,4ZM8,5h2.51l-1,10H8ZM1.49,5H4V15H2.53ZM7,15H5V5H7Z"
                      fill="rgb(210, 67, 58)"
                    />
                  </svg>
                  <span>
                    Remove
                  </span>
                </button>
              </span>
            </div>
          </div>
          <div
            className="c31"
          >
            <div
              className="c32 c0"
              height="0.0625rem"
            />
          </div>
          <div
            className="c0"
          >
            <div
              className="c33"
            >
              <label
                className="c34"
                htmlFor=""
              >
                Short ID
              </label>
              <div
                className="c35"
              >
                <input
                  className="c36"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value=""
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c37"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c0"
          >
            <div
              className="c33"
            >
              <label
                className="c34"
                htmlFor=""
              >
                ID
              </label>
              <div
                className="c35"
              >
                <input
                  className="c36"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value={undefined}
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c37"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c0"
          >
            <div
              className="c33"
            >
              <label
                className="c34"
                htmlFor=""
              >
                CN UUID
              </label>
              <div
                className="c35"
              >
                <input
                  className="c36"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value={undefined}
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c37"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c0"
          >
            <div
              className="c33"
            >
              <label
                className="c34"
                htmlFor=""
              >
                Login
              </label>
              <div
                className="c35"
              >
                <input
                  className="c38"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value="ssh root@undefined"
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c37"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`renders <Summary state /> without throwing 2`] = `
.c0 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.625rem;
  margin-left: -0.625rem;
}

.c5 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.625rem;
  margin-left: -0.625rem;
}

.c16 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.625rem;
  margin-left: -0.625rem;
}

.c1 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c6 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c17 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c28 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c33 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c8 {
  margin-top: 0.75rem;
  margin-bottom: 1.125rem;
}

.c14 {
  margin-top: 0.375rem;
}

.c31 {
  margin-top: 1.5rem;
  margin-bottom: 1.875rem;
}

.c4 {
  padding: 1.5rem;
}

.c22 {
  padding-top: 0.1875rem;
}

.c21 {
  background-color: transparent;
  -webkit-text-decoration-skip: objects;
  text-decoration-skip: objects;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
}

.c24 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  text-transform: none;
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  min-width: 7.5rem;
}

.c24::-moz-focus-inner,
.c24[type='button']::-moz-focus-inner,
.c24[type='reset']::-moz-focus-inner,
.c24[type='submit']::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

.c24:-moz-focusring,
.c24[type='button']:-moz-focusring,
.c24[type='reset']:-moz-focusring,
.c24[type='submit']:-moz-focusring {
  outline: 0.0625rem dotted ButtonText;
}

.c24 + button,
.c24 + a {
  margin-left: 0.375rem;
}

.c20 {
  color: rgb(59,70,204);
  -webkit-text-fill-color: currentcolor;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
}

.c20:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c37 {
  cursor: pointer;
}

.c19 {
  display: inline-block;
}

.c19 + button,
.c19 + a {
  margin-left: 0.375rem;
}

.c18 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  padding: 0.625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  min-height: 0rem;
  height: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-weight: 500;
}

.c18:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c18:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c18:active,
.c18:active:hover,
.c18:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c18[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c18:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c18:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c18:active,
.c18:active:hover,
.c18:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c18 svg + span {
  margin-left: 0.75rem;
}

.c18 svg {
  max-height: 1.125rem;
}

.c26 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  padding: 0.625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  min-height: 0rem;
  height: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c26:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c26:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c26:active,
.c26:active:hover,
.c26:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c26[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c26:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c26:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c26:active,
.c26:active:hover,
.c26:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c26:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c26:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c26:active,
.c26:active:hover,
.c26:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c26 svg + span {
  margin-left: 0.75rem;
}

.c26 svg {
  max-height: 1.125rem;
}

.c27 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-weight: 500;
}

.c27:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c27:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c27:active,
.c27:active:hover,
.c27:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c27[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c27:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c27:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c27:active,
.c27:active:hover,
.c27:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c27:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c27:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c27:active,
.c27:active:hover,
.c27:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c27 svg + span {
  margin-left: 0.75rem;
}

.c27 svg {
  max-height: 1.125rem;
}

.c23 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  padding: 0.625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  min-height: 0rem;
  height: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c23:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c23:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c23:active,
.c23:active:hover,
.c23:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c23[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c23:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c23:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c23:active,
.c23:active:hover,
.c23:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c23 svg + span {
  margin-left: 0.75rem;
}

.c23 svg {
  max-height: 1.125rem;
}

.c25 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-weight: 500;
}

.c25:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c25:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c25:active,
.c25:active:hover,
.c25:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c25[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c25:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c25:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c25:active,
.c25:active:hover,
.c25:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c25 svg + span {
  margin-left: 0.75rem;
}

.c25 svg {
  max-height: 1.125rem;
}

.c29 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  color: rgb(210,67,58);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(210,67,58);
  padding: 0.625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  min-height: 0rem;
  height: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  float: right;
}

.c29:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c29:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c29:active,
.c29:active:hover,
.c29:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c29[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c29:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c29:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c29:active,
.c29:active:hover,
.c29:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c29:focus {
  color: rgb(205,37,27);
  background-color: rgb(255,255,255);
  border-color: rgb(205,37,27);
}

.c29:hover {
  color: rgb(205,37,27);
  background-color: rgb(255,255,255);
  border-color: rgb(205,37,27);
}

.c29:active,
.c29:active:hover,
.c29:active:focus {
  background-color: rgba(210,67,58,0.1);
  border-color: rgb(205,37,27);
}

.c29 svg + span {
  margin-left: 0.75rem;
}

.c29 svg {
  max-height: 1.125rem;
}

.c30 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  color: rgb(210,67,58);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(210,67,58);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-weight: 500;
  float: right;
}

.c30:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c30:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c30:active,
.c30:active:hover,
.c30:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c30[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c30:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c30:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c30:active,
.c30:active:hover,
.c30:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c30:focus {
  color: rgb(205,37,27);
  background-color: rgb(255,255,255);
  border-color: rgb(205,37,27);
}

.c30:hover {
  color: rgb(205,37,27);
  background-color: rgb(255,255,255);
  border-color: rgb(205,37,27);
}

.c30:active,
.c30:active:hover,
.c30:active:focus {
  background-color: rgba(210,67,58,0.1);
  border-color: rgb(205,37,27);
}

.c30 svg + span {
  margin-left: 0.75rem;
}

.c30 svg {
  max-height: 1.125rem;
}

.c13 {
  width: 0.9375rem;
  height: 0.9375rem;
  border-radius: 50%;
  background-color: rgb(216,216,216);
  display: inline-block;
  margin-right: 0.375rem;
  margin-left: 0rem;
}

.c11 {
  font-size: 0.9375rem;
  line-height: 1.125rem;
  font-style: normal;
  font-stretch: normal;
  display: block;
  color: rgb(70,70,70);
  text-align: left;
  margin-bottom: 0.1875rem;
}

.c34 {
  font-size: 0.9375rem;
  line-height: 1.125rem;
  font-style: normal;
  font-stretch: normal;
  display: block;
  color: rgb(70,70,70);
  text-align: left;
  margin-bottom: 0.1875rem;
  margin-right: 0.75rem;
  font-weight: 600;
  white-space: pre;
  font-size: 0.8125rem;
}

.c7 {
  color: rgb(73,73,73);
  font-weight: normal;
  line-height: 1.875rem;
  font-size: 1.5rem;
  margin: 0;
}

.c7 + p,
.c7 + small,
.c7 + h1,
.c7 + h2,
.c7 + label,
.c7 + h3,
.c7 + h4,
.c7 + h5,
.c7 + div,
.c7 + span {
  margin-top: 1.5rem;
}

.c32 {
  background-color: rgb(216,216,216);
  margin: 0;
  height: 0.0625rem;
}

.c2 {
  box-sizing: content-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  border-width: 0.0625rem;
  border-style: solid;
  -webkit-transition: all 300ms ease;
  transition: all 300ms ease;
  color: rgb(73,73,73);
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c3 {
  box-sizing: content-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  border-width: 0.0625rem;
  border-style: solid;
  -webkit-transition: all 300ms ease;
  transition: all 300ms ease;
  color: rgb(73,73,73);
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  box-sizing: border-box;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  border-width: 0;
  margin-bottom: 0;
  background-color: transparent;
}

.c3 > [name='card']:not(:last-child) {
  margin-bottom: 0.8125rem;
}

.c3 > [name='card']:last-child {
  margin-bottom: 0.4375rem;
}

.c36 {
  box-sizing: border-box;
  width: 18.75rem;
  height: 3rem;
  min-height: 3rem;
  padding: 0.8125rem 0.75rem;
  border-radius: 0.25rem;
  background-color: rgb(255,255,255);
  border: 0.0625rem solid rgb(216,216,216);
  color: rgb(73,73,73);
  font-size: 0.9375rem;
  line-height: normal !important;
  font-style: normal;
  font-stretch: normal;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  outline: 0;
  font-family: "Roboto Mono",monospace;
  width: 100%;
  min-width: 100%;
  text-overflow: ellipsis;
}

.c36:focus {
  border-color: rgb(59,70,204);
  outline: 0;
}

.c36::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36:invalid {
  box-shadow: none;
}

.c36:disabled {
  background-color: rgb(250,250,250);
  color: rgb(216,216,216);
  cursor: not-allowed;
}

.c36:disabled::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36:disabled::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36:disabled:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36:disabled {
  color: rgb(73,73,73);
}

.c36:disabled::-webkit-input-placeholder {
  color: rgb(73,73,73);
}

.c36:disabled::-moz-placeholder {
  color: rgb(73,73,73);
}

.c36:disabled:-ms-input-placeholder {
  color: rgb(73,73,73);
}

.c38 {
  box-sizing: border-box;
  width: 18.75rem;
  height: 3rem;
  min-height: 3rem;
  padding: 0.8125rem 0.75rem;
  border-radius: 0.25rem;
  background-color: rgb(255,255,255);
  border: 0.0625rem solid rgb(216,216,216);
  color: rgb(73,73,73);
  font-size: 0.9375rem;
  line-height: normal !important;
  font-style: normal;
  font-stretch: normal;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  outline: 0;
  font-family: "Roboto Mono",monospace;
  width: 100%;
  min-width: 100%;
}

.c38:focus {
  border-color: rgb(59,70,204);
  outline: 0;
}

.c38::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c38::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c38:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c38:invalid {
  box-shadow: none;
}

.c38:disabled {
  background-color: rgb(250,250,250);
  color: rgb(216,216,216);
  cursor: not-allowed;
}

.c38:disabled::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c38:disabled::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c38:disabled:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c38:disabled {
  color: rgb(73,73,73);
}

.c38:disabled::-webkit-input-placeholder {
  color: rgb(73,73,73);
}

.c38:disabled::-moz-placeholder {
  color: rgb(73,73,73);
}

.c38:disabled:-ms-input-placeholder {
  color: rgb(73,73,73);
}

.c35 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 0.625rem;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c35 input {
  padding-right: 1.875rem;
}

.c35 div {
  position: relative;
  left: -1.625rem;
}

.c15 {
  opacity: 0.5;
  padding-right: 0.1875rem;
}

.c10 {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.c9 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.c12 {
  width: 0.0625rem;
  background: rgb(216,216,216);
  height: 1.5rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end;
  margin: 0 0.75rem;
}

@media only screen and (min-width:0em) {
  .c5 {
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
  }
}

@media only screen and (min-width:0em) {
  .c16 {
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
  }
}

@media only screen and (min-width:0em) {
  .c1 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media only screen and (min-width:48em) {
  .c1 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media only screen and (min-width:64em) {
  .c1 {
    -webkit-flex-basis: 75%;
    -ms-flex-preferred-size: 75%;
    flex-basis: 75%;
    max-width: 75%;
  }
}

@media only screen and (min-width:0em) {
  .c6 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media only screen and (min-width:0em) {
  .c17 {
    -webkit-flex-basis: 75%;
    -ms-flex-preferred-size: 75%;
    flex-basis: 75%;
    max-width: 75%;
  }
}

@media only screen and (min-width:0em) {
  .c28 {
    -webkit-flex-basis: 25%;
    -ms-flex-preferred-size: 25%;
    flex-basis: 25%;
    max-width: 25%;
  }
}

@media only screen and (min-width:0em) {
  .c33 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media only screen and (min-width:64em) {
  .c33 {
    -webkit-flex-basis: 58.333333333333336%;
    -ms-flex-preferred-size: 58.333333333333336%;
    flex-basis: 58.333333333333336%;
    max-width: 58.333333333333336%;
  }
}

@media (max-width:47.9375rem) {
  .c9 {
    display: block;
  }
}

@media (max-width:47.9375rem) {
  .c12 {
    display: none;
  }
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <div
      className="c2"
      disabled={false}
      name="card"
    >
      <div
        className="c3"
        name="card-outlet"
      >
        <div
          className="c4"
        >
          <div
            className="c5"
          >
            <div
              className="c6"
            >
              <h2
                className="c7"
              />
            </div>
          </div>
          <div
            className="c8"
          >
            <div
              className="c9"
            >
              <label
                className="c10 c11"
              >
                Custom Image
              </label>
              <div
                className="c12"
              />
              <label
                className="c10 c11"
              >
                Hardware virtual machine
              </label>
              <div
                className="c12"
              />
              <label
                className="c10 c11"
              />
              <div
                className="c12"
              />
              <div
                className="c9"
              >
                <span
                  className="c13"
                  color="grey"
                  size="0.9375rem"
                />
                Stopped
              </div>
            </div>
            <div
              className="c14"
            >
              <div
                className="c9"
              >
                <div
                  className="c9"
                >
                  <label
                    className="c15 c11"
                  >
                    Created: 
                  </label>
                  <label
                    className="c11"
                  >
                     
                    almost NaN years
                     ago
                  </label>
                </div>
                <div
                  className="c12"
                />
                <div
                  className="c9"
                >
                  <label
                    className="c15 c11"
                  >
                    Updated: 
                  </label>
                  <label
                    className="c11"
                  >
                     
                    almost NaN years
                     ago
                  </label>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c16"
          >
            <div
              className="c17"
            >
              <a
                className="c18 c19 c20 c21"
                data-ui-button="true"
                href="http://localhost/images/~create/undefined"
                icon={true}
                rel="noopener noreferrer"
                target="__blank"
              >
                <div
                  className="c22"
                >
                  <svg
                    className=""
                    height="20"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 16.67 20"
                    width="16.67"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M12.83,8v6h-9V8h9m0-1h-9a1,1,0,0,0-1,1v6a1,1,0,0,0,1,1h9a1,1,0,0,0,1-1V8a1,1,0,0,0-1-1Zm-7,5.5v-3a.5.5,0,0,0-.5-.5h0a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,.5.5h0A.5.5,0,0,0,5.83,12.5Zm2,0v-3a.5.5,0,0,0-.5-.5h0a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,.5.5h0A.5.5,0,0,0,7.83,12.5Zm2,0v-3a.5.5,0,0,0-.5-.5h0a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,.5.5h0A.5.5,0,0,0,9.83,12.5Zm2,0v-3a.5.5,0,0,0-.5-.5h0a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,.5.5h0A.5.5,0,0,0,11.83,12.5Zm3.73-8.06L12.22,1.11,11.11,0h-10A1.11,1.11,0,0,0,0,1.11V18.89A1.11,1.11,0,0,0,1.11,20H15.56a1.11,1.11,0,0,0,1.11-1.11V5.56ZM14.83,5h-3V2Zm-13,13V2h9V6h4V18Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </a>
              <span
                name="react-responsive-mock"
                query="only screen and (max-width: 47.9375rem)"
              >
                <button
                  className="c23 c19 c24"
                  data-ui-button="true"
                  disabled={false}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="14"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 13.36 14"
                    width="13.36"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M2.53,1.68a.81.81,0,0,1,.39.1l8.31,4.48a.84.84,0,0,1,0,1.48L2.92,12.22a.81.81,0,0,1-.39.1.85.85,0,0,1-.85-.85V2.53a.85.85,0,0,1,.85-.85M2.53,0A2.53,2.53,0,0,0,0,2.53v8.94A2.53,2.53,0,0,0,3.72,13.7L12,9.22a2.52,2.52,0,0,0,0-4.44L3.72.3A2.5,2.5,0,0,0,2.53,0Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (min-width: 48rem)"
              >
                <button
                  className="c25 c19 c24"
                  data-ui-button="true"
                  disabled={false}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="14"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 13.36 14"
                    width="13.36"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M2.53,1.68a.81.81,0,0,1,.39.1l8.31,4.48a.84.84,0,0,1,0,1.48L2.92,12.22a.81.81,0,0,1-.39.1.85.85,0,0,1-.85-.85V2.53a.85.85,0,0,1,.85-.85M2.53,0A2.53,2.53,0,0,0,0,2.53v8.94A2.53,2.53,0,0,0,3.72,13.7L12,9.22a2.52,2.52,0,0,0,0-4.44L3.72.3A2.5,2.5,0,0,0,2.53,0Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                  <span>
                    Start
                  </span>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (max-width: 47.9375rem)"
              >
                <button
                  className="c26 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="14"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 14 14"
                    width="14"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M10.75,1.75a1.5,1.5,0,0,1,1.5,1.5v7.5a1.5,1.5,0,0,1-1.5,1.5H3.25a1.5,1.5,0,0,1-1.5-1.5V3.25a1.5,1.5,0,0,1,1.5-1.5h7.5m0-1.75H3.25A3.26,3.26,0,0,0,0,3.25v7.5A3.26,3.26,0,0,0,3.25,14h7.5A3.26,3.26,0,0,0,14,10.75V3.25A3.26,3.26,0,0,0,10.75,0Z"
                      fill="rgb(216, 216, 216)"
                    />
                  </svg>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (min-width: 48rem)"
              >
                <button
                  className="c27 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="14"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 14 14"
                    width="14"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M10.75,1.75a1.5,1.5,0,0,1,1.5,1.5v7.5a1.5,1.5,0,0,1-1.5,1.5H3.25a1.5,1.5,0,0,1-1.5-1.5V3.25a1.5,1.5,0,0,1,1.5-1.5h7.5m0-1.75H3.25A3.26,3.26,0,0,0,0,3.25v7.5A3.26,3.26,0,0,0,3.25,14h7.5A3.26,3.26,0,0,0,14,10.75V3.25A3.26,3.26,0,0,0,10.75,0Z"
                      fill="rgb(216, 216, 216)"
                    />
                  </svg>
                  <span>
                    Stop
                  </span>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (max-width: 47.9375rem)"
              >
                <button
                  className="c26 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="21"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    version="1.1"
                    viewBox="0 0 20 21"
                    width="20"
                    xmlns="http://www.w3.org/2000/svg"
                    xmlnsXlink="http://www.w3.org/1999/xlink"
                  >
                    <g
                      transform="translate(17997 -18577)"
                    >
                      <g>
                        <use
                          fill="rgb(216, 216, 216)"
                          transform="matrix(0.866025 0.5 -0.5 0.866025 -17988.7 18577.9)"
                          xlinkHref="#f"
                        />
                      </g>
                    </g>
                    <defs>
                      <path
                        d="M 5.39661 3.57718L 5.3977 5.34469L 10.0255 2.67281L 5.39715 0L 5.39832 2.00201C 2.33086 2.5484 0.00065755 5.23112 0 8.45654C 0.000380483 12.0783 2.93556 15.0137 6.55562 15.0143C 10.1774 15.014 13.1128 12.0788 13.1124 8.45702L 11.5697 8.45687C 11.5697 11.2264 9.32527 13.4717 6.55578 13.4716C 3.78629 13.4716 1.54268 11.2262 1.5427 8.45669C 1.54135 6.08718 3.18616 4.10012 5.39661 3.57718Z"
                        fillRule="evenodd"
                        id="f"
                      />
                    </defs>
                  </svg>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (min-width: 48rem)"
              >
                <button
                  className="c27 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="21"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    version="1.1"
                    viewBox="0 0 20 21"
                    width="20"
                    xmlns="http://www.w3.org/2000/svg"
                    xmlnsXlink="http://www.w3.org/1999/xlink"
                  >
                    <g
                      transform="translate(17997 -18577)"
                    >
                      <g>
                        <use
                          fill="rgb(216, 216, 216)"
                          transform="matrix(0.866025 0.5 -0.5 0.866025 -17988.7 18577.9)"
                          xlinkHref="#f"
                        />
                      </g>
                    </g>
                    <defs>
                      <path
                        d="M 5.39661 3.57718L 5.3977 5.34469L 10.0255 2.67281L 5.39715 0L 5.39832 2.00201C 2.33086 2.5484 0.00065755 5.23112 0 8.45654C 0.000380483 12.0783 2.93556 15.0137 6.55562 15.0143C 10.1774 15.014 13.1128 12.0788 13.1124 8.45702L 11.5697 8.45687C 11.5697 11.2264 9.32527 13.4717 6.55578 13.4716C 3.78629 13.4716 1.54268 11.2262 1.5427 8.45669C 1.54135 6.08718 3.18616 4.10012 5.39661 3.57718Z"
                        fillRule="evenodd"
                        id="f"
                      />
                    </defs>
                  </svg>
                  <span>
                    Reboot
                  </span>
                </button>
              </span>
            </div>
            <div
              className="c28"
            >
              <span
                name="react-responsive-mock"
                query="only screen and (max-width: 47.9375rem)"
              >
                <button
                  className="c29 c19 c24"
                  data-ui-button="true"
                  disabled={false}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="16"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 12 16"
                    width="12"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M2.67,0V1.5H0V3H12V1.5H9.33V0ZM0,4,1.33,16h9.34L12,4ZM8,5h2.51l-1,10H8ZM1.49,5H4V15H2.53ZM7,15H5V5H7Z"
                      fill="rgb(210, 67, 58)"
                    />
                  </svg>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (min-width: 48rem)"
              >
                <button
                  className="c30 c19 c24"
                  data-ui-button="true"
                  disabled={false}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="16"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 12 16"
                    width="12"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M2.67,0V1.5H0V3H12V1.5H9.33V0ZM0,4,1.33,16h9.34L12,4ZM8,5h2.51l-1,10H8ZM1.49,5H4V15H2.53ZM7,15H5V5H7Z"
                      fill="rgb(210, 67, 58)"
                    />
                  </svg>
                  <span>
                    Remove
                  </span>
                </button>
              </span>
            </div>
          </div>
          <div
            className="c31"
          >
            <div
              className="c32 c0"
              height="0.0625rem"
            />
          </div>
          <div
            className="c0"
          >
            <div
              className="c33"
            >
              <label
                className="c34"
                htmlFor=""
              >
                Short ID
              </label>
              <div
                className="c35"
              >
                <input
                  className="c36"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value=""
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c37"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c0"
          >
            <div
              className="c33"
            >
              <label
                className="c34"
                htmlFor=""
              >
                ID
              </label>
              <div
                className="c35"
              >
                <input
                  className="c36"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value={undefined}
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c37"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c0"
          >
            <div
              className="c33"
            >
              <label
                className="c34"
                htmlFor=""
              >
                CN UUID
              </label>
              <div
                className="c35"
              >
                <input
                  className="c36"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value={undefined}
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c37"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c0"
          >
            <div
              className="c33"
            >
              <label
                className="c34"
                htmlFor=""
              >
                Login
              </label>
              <div
                className="c35"
              >
                <input
                  className="c38"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value="ssh root@undefined"
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c37"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`renders <Summary state /> without throwing 3`] = `
.c0 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.625rem;
  margin-left: -0.625rem;
}

.c5 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.625rem;
  margin-left: -0.625rem;
}

.c16 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.625rem;
  margin-left: -0.625rem;
}

.c1 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c6 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c17 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c26 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c31 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c8 {
  margin-top: 0.75rem;
  margin-bottom: 1.125rem;
}

.c14 {
  margin-top: 0.375rem;
}

.c29 {
  margin-top: 1.5rem;
  margin-bottom: 1.875rem;
}

.c4 {
  padding: 1.5rem;
}

.c22 {
  padding-top: 0.1875rem;
}

.c21 {
  background-color: transparent;
  -webkit-text-decoration-skip: objects;
  text-decoration-skip: objects;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
}

.c24 {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  text-transform: none;
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  min-width: 7.5rem;
}

.c24::-moz-focus-inner,
.c24[type='button']::-moz-focus-inner,
.c24[type='reset']::-moz-focus-inner,
.c24[type='submit']::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

.c24:-moz-focusring,
.c24[type='button']:-moz-focusring,
.c24[type='reset']:-moz-focusring,
.c24[type='submit']:-moz-focusring {
  outline: 0.0625rem dotted ButtonText;
}

.c24 + button,
.c24 + a {
  margin-left: 0.375rem;
}

.c20 {
  color: rgb(59,70,204);
  -webkit-text-fill-color: currentcolor;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
}

.c20:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c35 {
  cursor: pointer;
}

.c19 {
  display: inline-block;
}

.c19 + button,
.c19 + a {
  margin-left: 0.375rem;
}

.c18 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  padding: 0.625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  min-height: 0rem;
  height: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-weight: 500;
}

.c18:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c18:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c18:active,
.c18:active:hover,
.c18:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c18[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c18:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c18:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c18:active,
.c18:active:hover,
.c18:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c18 svg + span {
  margin-left: 0.75rem;
}

.c18 svg {
  max-height: 1.125rem;
}

.c23 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  padding: 0.625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  min-height: 0rem;
  height: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c23:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c23:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c23:active,
.c23:active:hover,
.c23:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c23[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c23:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c23:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c23:active,
.c23:active:hover,
.c23:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c23:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c23:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c23:active,
.c23:active:hover,
.c23:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c23 svg + span {
  margin-left: 0.75rem;
}

.c23 svg {
  max-height: 1.125rem;
}

.c25 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-weight: 500;
}

.c25:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c25:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c25:active,
.c25:active:hover,
.c25:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c25[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c25:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c25:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c25:active,
.c25:active:hover,
.c25:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c25:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c25:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c25:active,
.c25:active:hover,
.c25:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c25 svg + span {
  margin-left: 0.75rem;
}

.c25 svg {
  max-height: 1.125rem;
}

.c27 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  color: rgb(210,67,58);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(210,67,58);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  padding: 0.625rem 1.125rem;
  font-size: 0.8125rem;
  min-width: 0rem;
  min-height: 0rem;
  height: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  float: right;
}

.c27:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c27:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c27:active,
.c27:active:hover,
.c27:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c27[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c27:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c27:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c27:active,
.c27:active:hover,
.c27:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c27:focus {
  color: rgb(205,37,27);
  background-color: rgb(255,255,255);
  border-color: rgb(205,37,27);
}

.c27:hover {
  color: rgb(205,37,27);
  background-color: rgb(255,255,255);
  border-color: rgb(205,37,27);
}

.c27:active,
.c27:active:hover,
.c27:active:focus {
  background-color: rgba(210,67,58,0.1);
  border-color: rgb(205,37,27);
}

.c27:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c27:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c27:active,
.c27:active:hover,
.c27:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c27 svg + span {
  margin-left: 0.75rem;
}

.c27 svg {
  max-height: 1.125rem;
}

.c28 {
  box-sizing: border-box;
  display: inline-block;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 3rem;
  height: 3rem;
  min-width: 7.5rem;
  padding: 0.9375rem 1.125rem;
  position: relative;
  font-family: "Libre Franklin",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica,sans-serif;
  font-size: 0.9375rem;
  text-align: center;
  font-style: normal;
  font-stretch: normal;
  line-height: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  color: rgb(255,255,255);
  -webkit-text-fill-color: currentcolor;
  background-image: none;
  background-color: rgb(59,70,204);
  border-radius: 0.25rem;
  border: solid 0.0625rem rgb(45,56,132);
  color: rgb(70,70,70);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  color: rgb(210,67,58);
  -webkit-text-fill-color: currentcolor;
  background-color: rgb(255,255,255);
  border-color: rgb(210,67,58);
  cursor: not-allowed;
  pointer-events: none;
  color: rgb(216,216,216);
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-weight: 500;
  float: right;
}

.c28:focus {
  outline: 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgb(59,70,204);
  border-color: rgb(45,56,132);
}

.c28:hover {
  background-color: rgb(72,83,217);
  border: solid 0.0625rem rgb(45,56,132);
}

.c28:active,
.c28:active:hover,
.c28:active:focus {
  background-image: none;
  outline: 0;
  background-color: rgb(45,56,132);
  border-color: rgb(45,56,132);
}

.c28[disabled] {
  cursor: not-allowed;
  pointer-events: none;
}

.c28:focus {
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c28:hover {
  background-color: rgb(247,247,247);
  border-color: rgb(216,216,216);
}

.c28:active,
.c28:active:hover,
.c28:active:focus {
  background-color: rgb(230,230,230);
  border-color: rgb(216,216,216);
}

.c28:focus {
  color: rgb(205,37,27);
  background-color: rgb(255,255,255);
  border-color: rgb(205,37,27);
}

.c28:hover {
  color: rgb(205,37,27);
  background-color: rgb(255,255,255);
  border-color: rgb(205,37,27);
}

.c28:active,
.c28:active:hover,
.c28:active:focus {
  background-color: rgba(210,67,58,0.1);
  border-color: rgb(205,37,27);
}

.c28:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(216,216,216);
}

.c28:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c28:active,
.c28:active:hover,
.c28:active:focus {
  background-color: rgb(250,250,250);
  border-color: rgb(250,250,250);
}

.c28 svg + span {
  margin-left: 0.75rem;
}

.c28 svg {
  max-height: 1.125rem;
}

.c13 {
  width: 0.9375rem;
  height: 0.9375rem;
  border-radius: 50%;
  background-color: rgb(59,70,204);
  display: inline-block;
  margin-right: 0.375rem;
  margin-left: 0rem;
}

.c11 {
  font-size: 0.9375rem;
  line-height: 1.125rem;
  font-style: normal;
  font-stretch: normal;
  display: block;
  color: rgb(70,70,70);
  text-align: left;
  margin-bottom: 0.1875rem;
}

.c32 {
  font-size: 0.9375rem;
  line-height: 1.125rem;
  font-style: normal;
  font-stretch: normal;
  display: block;
  color: rgb(70,70,70);
  text-align: left;
  margin-bottom: 0.1875rem;
  margin-right: 0.75rem;
  font-weight: 600;
  white-space: pre;
  font-size: 0.8125rem;
}

.c7 {
  color: rgb(73,73,73);
  font-weight: normal;
  line-height: 1.875rem;
  font-size: 1.5rem;
  margin: 0;
}

.c7 + p,
.c7 + small,
.c7 + h1,
.c7 + h2,
.c7 + label,
.c7 + h3,
.c7 + h4,
.c7 + h5,
.c7 + div,
.c7 + span {
  margin-top: 1.5rem;
}

.c30 {
  background-color: rgb(216,216,216);
  margin: 0;
  height: 0.0625rem;
}

.c2 {
  box-sizing: content-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  border-width: 0.0625rem;
  border-style: solid;
  -webkit-transition: all 300ms ease;
  transition: all 300ms ease;
  color: rgb(73,73,73);
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
}

.c3 {
  box-sizing: content-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  border-width: 0.0625rem;
  border-style: solid;
  -webkit-transition: all 300ms ease;
  transition: all 300ms ease;
  color: rgb(73,73,73);
  background-color: rgb(255,255,255);
  border-color: rgb(216,216,216);
  box-sizing: border-box;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  border-width: 0;
  margin-bottom: 0;
  background-color: transparent;
}

.c3 > [name='card']:not(:last-child) {
  margin-bottom: 0.8125rem;
}

.c3 > [name='card']:last-child {
  margin-bottom: 0.4375rem;
}

.c34 {
  box-sizing: border-box;
  width: 18.75rem;
  height: 3rem;
  min-height: 3rem;
  padding: 0.8125rem 0.75rem;
  border-radius: 0.25rem;
  background-color: rgb(255,255,255);
  border: 0.0625rem solid rgb(216,216,216);
  color: rgb(73,73,73);
  font-size: 0.9375rem;
  line-height: normal !important;
  font-style: normal;
  font-stretch: normal;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  outline: 0;
  font-family: "Roboto Mono",monospace;
  width: 100%;
  min-width: 100%;
  text-overflow: ellipsis;
}

.c34:focus {
  border-color: rgb(59,70,204);
  outline: 0;
}

.c34::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c34::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c34:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c34:invalid {
  box-shadow: none;
}

.c34:disabled {
  background-color: rgb(250,250,250);
  color: rgb(216,216,216);
  cursor: not-allowed;
}

.c34:disabled::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c34:disabled::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c34:disabled:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c34:disabled {
  color: rgb(73,73,73);
}

.c34:disabled::-webkit-input-placeholder {
  color: rgb(73,73,73);
}

.c34:disabled::-moz-placeholder {
  color: rgb(73,73,73);
}

.c34:disabled:-ms-input-placeholder {
  color: rgb(73,73,73);
}

.c36 {
  box-sizing: border-box;
  width: 18.75rem;
  height: 3rem;
  min-height: 3rem;
  padding: 0.8125rem 0.75rem;
  border-radius: 0.25rem;
  background-color: rgb(255,255,255);
  border: 0.0625rem solid rgb(216,216,216);
  color: rgb(73,73,73);
  font-size: 0.9375rem;
  line-height: normal !important;
  font-style: normal;
  font-stretch: normal;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  outline: 0;
  font-family: "Roboto Mono",monospace;
  width: 100%;
  min-width: 100%;
}

.c36:focus {
  border-color: rgb(59,70,204);
  outline: 0;
}

.c36::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36:invalid {
  box-shadow: none;
}

.c36:disabled {
  background-color: rgb(250,250,250);
  color: rgb(216,216,216);
  cursor: not-allowed;
}

.c36:disabled::-webkit-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36:disabled::-moz-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36:disabled:-ms-input-placeholder {
  color: rgba(73,73,73,0.5);
}

.c36:disabled {
  color: rgb(73,73,73);
}

.c36:disabled::-webkit-input-placeholder {
  color: rgb(73,73,73);
}

.c36:disabled::-moz-placeholder {
  color: rgb(73,73,73);
}

.c36:disabled:-ms-input-placeholder {
  color: rgb(73,73,73);
}

.c33 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 0.625rem;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c33 input {
  padding-right: 1.875rem;
}

.c33 div {
  position: relative;
  left: -1.625rem;
}

.c15 {
  opacity: 0.5;
  padding-right: 0.1875rem;
}

.c10 {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.c9 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.c12 {
  width: 0.0625rem;
  background: rgb(216,216,216);
  height: 1.5rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end;
  margin: 0 0.75rem;
}

@media only screen and (min-width:0em) {
  .c5 {
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
  }
}

@media only screen and (min-width:0em) {
  .c16 {
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
  }
}

@media only screen and (min-width:0em) {
  .c1 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media only screen and (min-width:48em) {
  .c1 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media only screen and (min-width:64em) {
  .c1 {
    -webkit-flex-basis: 75%;
    -ms-flex-preferred-size: 75%;
    flex-basis: 75%;
    max-width: 75%;
  }
}

@media only screen and (min-width:0em) {
  .c6 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media only screen and (min-width:0em) {
  .c17 {
    -webkit-flex-basis: 75%;
    -ms-flex-preferred-size: 75%;
    flex-basis: 75%;
    max-width: 75%;
  }
}

@media only screen and (min-width:0em) {
  .c26 {
    -webkit-flex-basis: 25%;
    -ms-flex-preferred-size: 25%;
    flex-basis: 25%;
    max-width: 25%;
  }
}

@media only screen and (min-width:0em) {
  .c31 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media only screen and (min-width:64em) {
  .c31 {
    -webkit-flex-basis: 58.333333333333336%;
    -ms-flex-preferred-size: 58.333333333333336%;
    flex-basis: 58.333333333333336%;
    max-width: 58.333333333333336%;
  }
}

@media (max-width:47.9375rem) {
  .c9 {
    display: block;
  }
}

@media (max-width:47.9375rem) {
  .c12 {
    display: none;
  }
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <div
      className="c2"
      disabled={false}
      name="card"
    >
      <div
        className="c3"
        name="card-outlet"
      >
        <div
          className="c4"
        >
          <div
            className="c5"
          >
            <div
              className="c6"
            >
              <h2
                className="c7"
              />
            </div>
          </div>
          <div
            className="c8"
          >
            <div
              className="c9"
            >
              <label
                className="c10 c11"
              >
                Custom Image
              </label>
              <div
                className="c12"
              />
              <label
                className="c10 c11"
              >
                Hardware virtual machine
              </label>
              <div
                className="c12"
              />
              <label
                className="c10 c11"
              />
              <div
                className="c12"
              />
              <div
                className="c9"
              >
                <span
                  className="c13"
                  color="primary"
                  size="0.9375rem"
                />
                Provisioning
              </div>
            </div>
            <div
              className="c14"
            >
              <div
                className="c9"
              >
                <div
                  className="c9"
                >
                  <label
                    className="c15 c11"
                  >
                    Created: 
                  </label>
                  <label
                    className="c11"
                  >
                     
                    almost NaN years
                     ago
                  </label>
                </div>
                <div
                  className="c12"
                />
                <div
                  className="c9"
                >
                  <label
                    className="c15 c11"
                  >
                    Updated: 
                  </label>
                  <label
                    className="c11"
                  >
                     
                    almost NaN years
                     ago
                  </label>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c16"
          >
            <div
              className="c17"
            >
              <a
                className="c18 c19 c20 c21"
                data-ui-button="true"
                href="http://localhost/images/~create/undefined"
                icon={true}
                rel="noopener noreferrer"
                target="__blank"
              >
                <div
                  className="c22"
                >
                  <svg
                    className=""
                    height="20"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 16.67 20"
                    width="16.67"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M12.83,8v6h-9V8h9m0-1h-9a1,1,0,0,0-1,1v6a1,1,0,0,0,1,1h9a1,1,0,0,0,1-1V8a1,1,0,0,0-1-1Zm-7,5.5v-3a.5.5,0,0,0-.5-.5h0a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,.5.5h0A.5.5,0,0,0,5.83,12.5Zm2,0v-3a.5.5,0,0,0-.5-.5h0a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,.5.5h0A.5.5,0,0,0,7.83,12.5Zm2,0v-3a.5.5,0,0,0-.5-.5h0a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,.5.5h0A.5.5,0,0,0,9.83,12.5Zm2,0v-3a.5.5,0,0,0-.5-.5h0a.5.5,0,0,0-.5.5v3a.5.5,0,0,0,.5.5h0A.5.5,0,0,0,11.83,12.5Zm3.73-8.06L12.22,1.11,11.11,0h-10A1.11,1.11,0,0,0,0,1.11V18.89A1.11,1.11,0,0,0,1.11,20H15.56a1.11,1.11,0,0,0,1.11-1.11V5.56ZM14.83,5h-3V2Zm-13,13V2h9V6h4V18Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </a>
              <span
                name="react-responsive-mock"
                query="only screen and (max-width: 47.9375rem)"
              >
                <button
                  className="c23 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="14"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 13.36 14"
                    width="13.36"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M2.53,1.68a.81.81,0,0,1,.39.1l8.31,4.48a.84.84,0,0,1,0,1.48L2.92,12.22a.81.81,0,0,1-.39.1.85.85,0,0,1-.85-.85V2.53a.85.85,0,0,1,.85-.85M2.53,0A2.53,2.53,0,0,0,0,2.53v8.94A2.53,2.53,0,0,0,3.72,13.7L12,9.22a2.52,2.52,0,0,0,0-4.44L3.72.3A2.5,2.5,0,0,0,2.53,0Z"
                      fill="rgb(216, 216, 216)"
                    />
                  </svg>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (min-width: 48rem)"
              >
                <button
                  className="c25 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="14"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 13.36 14"
                    width="13.36"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M2.53,1.68a.81.81,0,0,1,.39.1l8.31,4.48a.84.84,0,0,1,0,1.48L2.92,12.22a.81.81,0,0,1-.39.1.85.85,0,0,1-.85-.85V2.53a.85.85,0,0,1,.85-.85M2.53,0A2.53,2.53,0,0,0,0,2.53v8.94A2.53,2.53,0,0,0,3.72,13.7L12,9.22a2.52,2.52,0,0,0,0-4.44L3.72.3A2.5,2.5,0,0,0,2.53,0Z"
                      fill="rgb(216, 216, 216)"
                    />
                  </svg>
                  <span>
                    Start
                  </span>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (max-width: 47.9375rem)"
              >
                <button
                  className="c23 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="14"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 14 14"
                    width="14"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M10.75,1.75a1.5,1.5,0,0,1,1.5,1.5v7.5a1.5,1.5,0,0,1-1.5,1.5H3.25a1.5,1.5,0,0,1-1.5-1.5V3.25a1.5,1.5,0,0,1,1.5-1.5h7.5m0-1.75H3.25A3.26,3.26,0,0,0,0,3.25v7.5A3.26,3.26,0,0,0,3.25,14h7.5A3.26,3.26,0,0,0,14,10.75V3.25A3.26,3.26,0,0,0,10.75,0Z"
                      fill="rgb(216, 216, 216)"
                    />
                  </svg>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (min-width: 48rem)"
              >
                <button
                  className="c25 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="14"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 14 14"
                    width="14"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M10.75,1.75a1.5,1.5,0,0,1,1.5,1.5v7.5a1.5,1.5,0,0,1-1.5,1.5H3.25a1.5,1.5,0,0,1-1.5-1.5V3.25a1.5,1.5,0,0,1,1.5-1.5h7.5m0-1.75H3.25A3.26,3.26,0,0,0,0,3.25v7.5A3.26,3.26,0,0,0,3.25,14h7.5A3.26,3.26,0,0,0,14,10.75V3.25A3.26,3.26,0,0,0,10.75,0Z"
                      fill="rgb(216, 216, 216)"
                    />
                  </svg>
                  <span>
                    Stop
                  </span>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (max-width: 47.9375rem)"
              >
                <button
                  className="c23 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="21"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    version="1.1"
                    viewBox="0 0 20 21"
                    width="20"
                    xmlns="http://www.w3.org/2000/svg"
                    xmlnsXlink="http://www.w3.org/1999/xlink"
                  >
                    <g
                      transform="translate(17997 -18577)"
                    >
                      <g>
                        <use
                          fill="rgb(216, 216, 216)"
                          transform="matrix(0.866025 0.5 -0.5 0.866025 -17988.7 18577.9)"
                          xlinkHref="#f"
                        />
                      </g>
                    </g>
                    <defs>
                      <path
                        d="M 5.39661 3.57718L 5.3977 5.34469L 10.0255 2.67281L 5.39715 0L 5.39832 2.00201C 2.33086 2.5484 0.00065755 5.23112 0 8.45654C 0.000380483 12.0783 2.93556 15.0137 6.55562 15.0143C 10.1774 15.014 13.1128 12.0788 13.1124 8.45702L 11.5697 8.45687C 11.5697 11.2264 9.32527 13.4717 6.55578 13.4716C 3.78629 13.4716 1.54268 11.2262 1.5427 8.45669C 1.54135 6.08718 3.18616 4.10012 5.39661 3.57718Z"
                        fillRule="evenodd"
                        id="f"
                      />
                    </defs>
                  </svg>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (min-width: 48rem)"
              >
                <button
                  className="c25 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="21"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    version="1.1"
                    viewBox="0 0 20 21"
                    width="20"
                    xmlns="http://www.w3.org/2000/svg"
                    xmlnsXlink="http://www.w3.org/1999/xlink"
                  >
                    <g
                      transform="translate(17997 -18577)"
                    >
                      <g>
                        <use
                          fill="rgb(216, 216, 216)"
                          transform="matrix(0.866025 0.5 -0.5 0.866025 -17988.7 18577.9)"
                          xlinkHref="#f"
                        />
                      </g>
                    </g>
                    <defs>
                      <path
                        d="M 5.39661 3.57718L 5.3977 5.34469L 10.0255 2.67281L 5.39715 0L 5.39832 2.00201C 2.33086 2.5484 0.00065755 5.23112 0 8.45654C 0.000380483 12.0783 2.93556 15.0137 6.55562 15.0143C 10.1774 15.014 13.1128 12.0788 13.1124 8.45702L 11.5697 8.45687C 11.5697 11.2264 9.32527 13.4717 6.55578 13.4716C 3.78629 13.4716 1.54268 11.2262 1.5427 8.45669C 1.54135 6.08718 3.18616 4.10012 5.39661 3.57718Z"
                        fillRule="evenodd"
                        id="f"
                      />
                    </defs>
                  </svg>
                  <span>
                    Reboot
                  </span>
                </button>
              </span>
            </div>
            <div
              className="c26"
            >
              <span
                name="react-responsive-mock"
                query="only screen and (max-width: 47.9375rem)"
              >
                <button
                  className="c27 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="16"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 12 16"
                    width="12"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M2.67,0V1.5H0V3H12V1.5H9.33V0ZM0,4,1.33,16h9.34L12,4ZM8,5h2.51l-1,10H8ZM1.49,5H4V15H2.53ZM7,15H5V5H7Z"
                      fill="rgb(210, 67, 58)"
                    />
                  </svg>
                </button>
              </span>
              <span
                name="react-responsive-mock"
                query="only screen and (min-width: 48rem)"
              >
                <button
                  className="c28 c19 c24"
                  data-ui-button="true"
                  disabled={true}
                  href=""
                  icon={true}
                  onClick={[Function]}
                  type="button"
                >
                  <svg
                    className=""
                    height="16"
                    innerRef={undefined}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 12 16"
                    width="12"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M2.67,0V1.5H0V3H12V1.5H9.33V0ZM0,4,1.33,16h9.34L12,4ZM8,5h2.51l-1,10H8ZM1.49,5H4V15H2.53ZM7,15H5V5H7Z"
                      fill="rgb(216, 216, 216)"
                    />
                  </svg>
                  <span>
                    Remove
                  </span>
                </button>
              </span>
            </div>
          </div>
          <div
            className="c29"
          >
            <div
              className="c30 c0"
              height="0.0625rem"
            />
          </div>
          <div
            className="c0"
          >
            <div
              className="c31"
            >
              <label
                className="c32"
                htmlFor=""
              >
                Short ID
              </label>
              <div
                className="c33"
              >
                <input
                  className="c34"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value=""
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c35"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c0"
          >
            <div
              className="c31"
            >
              <label
                className="c32"
                htmlFor=""
              >
                ID
              </label>
              <div
                className="c33"
              >
                <input
                  className="c34"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value={undefined}
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c35"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c0"
          >
            <div
              className="c31"
            >
              <label
                className="c32"
                htmlFor=""
              >
                CN UUID
              </label>
              <div
                className="c33"
              >
                <input
                  className="c34"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value={undefined}
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c35"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
          <div
            className="c0"
          >
            <div
              className="c31"
            >
              <label
                className="c32"
                htmlFor=""
              >
                Login
              </label>
              <div
                className="c33"
              >
                <input
                  className="c36"
                  disabled={false}
                  id=""
                  onBlur={null}
                  value="ssh root@undefined"
                />
                <div
                  onClick={undefined}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <svg
                    className="c35"
                    height="19"
                    innerRef={undefined}
                    onClick={[Function]}
                    style={
                      Object {
                        "transform": "rotate(0deg)",
                      }
                    }
                    viewBox="0 0 15 19"
                    width="15"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5,12l2-2v9H8V10l2,2,1-1L7.5,8,4,11ZM11,1h2a2.15,2.15,0,0,1,2,2V16a2.15,2.15,0,0,1-2,2H10V16h3V3H11V5H4V3H2V16H5v2H2a2.15,2.15,0,0,1-2-2V3A2.15,2.15,0,0,1,2,1H4V0h7ZM9,2H6V3H9V2Z"
                      fill="rgb(73, 73, 73)"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;
