// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders <Breadcrumb /> without throwing 1`] = `
.c0 {
  margin-right: auto;
  margin-left: auto;
  padding-right: 1.875rem;
  padding-left: 1.875rem;
  box-sizing: border-box;
  width: 100%;
  padding-left: 0;
  padding-right: 0;
}

.c1 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.625rem;
  margin-left: -0.625rem;
}

.c2 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c4 {
  color: rgba(73,73,73,1);
  font-weight: 600;
  line-height: 1.5rem;
  font-size: 0.9375rem;
  margin: 0;
  font-weight: normal;
  margin: 0.75rem 0;
}

.c4 + p,
.c4 + small,
.c4 + h1,
.c4 + h2,
.c4 + label,
.c4 + h3,
.c4 + h4,
.c4 + h5,
.c4 + div,
.c4 + span {
  margin-top: 0.75rem;
}

.c5 {
  margin: 0.1875rem 0.625rem;
}

.c3 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c3:last-child svg {
  display: none;
}

@media only screen and (min-width:0em) {
  .c2 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

<div
  className="c0"
>
  <div
    className="c1"
    name="breadcrum"
  >
    <div
      className="c2"
    >
      <div
        className="c3"
      >
        <h4
          className="c4"
          name="breadcrum-item"
        >
          Instances
        </h4>
        <svg
          className="c5 "
          height="6"
          innerRef={undefined}
          style={
            Object {
              "transform": "rotate(-90deg)",
            }
          }
          viewBox="0 0 9.6 6"
          width="9.6"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M9.6,1.12,8.24,0,4.8,3.5,1.36,0,0,1.12,4.8,6Z"
            fill="rgb(151, 151, 151)"
          />
        </svg>
      </div>
    </div>
  </div>
</div>
`;

exports[`renders <Breadcrumb match /> without throwing 1`] = `
.c0 {
  margin-right: auto;
  margin-left: auto;
  padding-right: 1.875rem;
  padding-left: 1.875rem;
  box-sizing: border-box;
  width: 100%;
  padding-left: 0;
  padding-right: 0;
}

.c1 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -0.625rem;
  margin-left: -0.625rem;
}

.c2 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding-right: 0.625rem;
  padding-left: 0.625rem;
  display: block;
}

.c4 {
  color: rgba(73,73,73,1);
  font-weight: 600;
  line-height: 1.5rem;
  font-size: 0.9375rem;
  margin: 0;
  font-weight: normal;
  margin: 0.75rem 0;
}

.c4 + p,
.c4 + small,
.c4 + h1,
.c4 + h2,
.c4 + label,
.c4 + h3,
.c4 + h4,
.c4 + h5,
.c4 + div,
.c4 + span {
  margin-top: 0.75rem;
}

.c5 {
  margin: 0.1875rem 0.625rem;
}

.c3 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c3:last-child svg {
  display: none;
}

@media only screen and (min-width:0em) {
  .c2 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

<div
  className="c0"
>
  <div
    className="c1"
    name="breadcrum"
  >
    <div
      className="c2"
    >
      <div
        className="c3"
      >
        <h4
          className="c4"
          name="breadcrum-item"
        >
          Instances
        </h4>
        <svg
          className="c5 "
          height="6"
          innerRef={undefined}
          style={
            Object {
              "transform": "rotate(-90deg)",
            }
          }
          viewBox="0 0 9.6 6"
          width="9.6"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M9.6,1.12,8.24,0,4.8,3.5,1.36,0,0,1.12,4.8,6Z"
            fill="rgb(151, 151, 151)"
          />
        </svg>
      </div>
      <div
        className="c3"
      >
        <h4
          className="c4"
          name="breadcrum-item"
        >
          name
        </h4>
        <svg
          className="c5 "
          height="6"
          innerRef={undefined}
          style={
            Object {
              "transform": "rotate(-90deg)",
            }
          }
          viewBox="0 0 9.6 6"
          width="9.6"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M9.6,1.12,8.24,0,4.8,3.5,1.36,0,0,1.12,4.8,6Z"
            fill="rgb(151, 151, 151)"
          />
        </svg>
      </div>
    </div>
  </div>
</div>
`;
